/*
 * freee API
 *
 *  <h1 id=\"freee_api\">freee API</h1> <hr /> <h2 id=\"start_guide\">スタートガイド</h2>  <p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>  <hr /> <h2 id=\"specification\">仕様</h2>  <pre><code>【重要】会計freee APIの新バージョンについて 2020年12月まで、2つのバージョンが利用できる状態です。古いものは2020年12月に利用不可となります。<br> 新しいAPIを利用するにはリクエストヘッダーに以下を指定します。 X-Api-Version: 2020-06-15<br> 指定がない場合は2020年12月に廃止予定のAPIを利用することとなります。<br> 【重要】APIのバージョン指定をせずに利用し続ける場合 2020年12月に新しいバージョンのAPIに自動的に切り替わります。 詳細は、<a href=\"https://developer.freee.co.jp/release-note/2948\" target=\"_blank\">リリースノート</a>をご覧ください。<br> 旧バージョンのAPIリファレンスを確認したい場合は、<a href=\"https://freee.github.io/freee-api-schema/\" target=\"_blank\">旧バージョンのAPIリファレンスページ</a>をご覧ください。 </code></pre>  <h3 id=\"api_endpoint\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/ (httpsのみ)</p>  <h3 id=\"about_authorize\">認証について</h3> <p>OAuth2.0を利用します。詳細は<a href=\"https://developer.freee.co.jp/docs\" target=\"_blank\">ドキュメントの認証</a>パートを参照してください。</p>  <h3 id=\"data_format\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>  <h3 id=\"compatibility\">後方互換性ありの変更</h3>  <p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>  <ul> <li>新しいAPIリソース・エンドポイントの追加</li> <li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li> <li>既存のAPIレスポンスに対する新しいプロパティの追加</li> <li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li> <li>keyとなっているidやcodeの長さの変更（長くする）</li> </ul>  <h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Freee-Request-ID</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"common_error_response\">共通エラーレスポンス</h3>  <ul> <li> <p>ステータスコードはレスポンス内のJSONに含まれる他、HTTPヘッダにも含まれる</p> </li> <li> <p>一部のエラーレスポンスにはエラーコードが含まれます。<br>詳細は、<a href=\"https://developer.freee.co.jp/tips/faq/40x-checkpoint\">HTTPステータスコード400台エラー時のチェックポイント</a>を参照してください</p> </li> <p>type</p>  <ul> <li>status : HTTPステータスコードの説明</li>  <li>validation : エラーの詳細の説明（開発者向け）</li> </ul> </li> </ul>  <p>レスポンスの例</p>  <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;status&quot;,         &quot;messages&quot; : [&quot;不正なリクエストです。&quot;]       },       {         &quot;type&quot; : &quot;validation&quot;,         &quot;messages&quot; : [&quot;Date は不正な日付フォーマットです。入力例：2013-01-01&quot;]       }     ]   }</code></pre>  </br>  <h3 id=\"api_rate_limit\">API使用制限</h3>    <p>freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。</p>   <p>その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>  <h4 id=\"reports_api_endpoint\">/reportsと/receipts/{id}/downloadエンドポイント</h4>  <p>freeeはエンドポイント毎に一定頻度以上のアクセスを検知した場合、APIアクセスをコントロールする場合があります。その際のhttp status codeは429（too many requests）となります。</p>  <ul>   <li>/reports:1秒に10回まで</li>   <li>/receipts/{id}/download:1秒に3回まで</li> </ul>  <p>レスポンスボディのmetaプロパティに以下を含めます。</p>  <ul>   <li>設定されている上限値</li>   <li>上限に達するまでの使用可能回数</li>   <li>（上限値に達した場合）使用回数がリセットされる時刻</li> </ul>  <h3 id=\"plan_api_rate_limit\">プラン別のAPI Rate Limit</h3>   <table border=\"1\">     <tbody>       <tr>         <th style=\"padding: 10px\"><strong>会計freeeプラン名</strong></th>         <th style=\"padding: 10px\"><strong>事業所とアプリケーション毎に1日でのAPIコール数</strong></th>       </tr>       <tr>         <td style=\"padding: 10px\">エンタープライズ</td>         <td style=\"padding: 10px\">10,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">プロフェッショナル</td>         <td style=\"padding: 10px\">5,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ベーシック</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ミニマム</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">上記以外</td>         <td style=\"padding: 10px\">3,000</td>       </tr>     </tbody>   </table>  <h3 id=\"webhook\">Webhookについて</h3>  <p>詳細は<a href=\"https://developer.freee.co.jp/docs/accounting/webhook\" target=\"_blank\">会計Webhook概要</a>を参照してください。</p>  <hr /> <h2 id=\"contact\">連絡先</h2>  <p>ご不明点、ご要望等は <a href=\"https://support.freee.co.jp/hc/ja/requests/new\">freee サポートデスクへのお問い合わせフォーム</a> からご連絡ください。</p> <hr />&copy; Since 2013 freee K.K.
 *
 * API version: v1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package freee

import (
	"encoding/json"
)

// QuotationCreateParams struct for QuotationCreateParams
type QuotationCreateParams struct {
	// 事業所ID
	CompanyId int32 `json:"company_id"`
	// 見積日 (yyyy-mm-dd)
	IssueDate *string `json:"issue_date,omitempty"`
	// 取引先ID
	PartnerId NullableInt32 `json:"partner_id,omitempty"`
	// 取引先コード
	PartnerCode NullableString `json:"partner_code,omitempty"`
	// 見積書番号 (デフォルト: 自動採番されます)
	QuotationNumber *string `json:"quotation_number,omitempty"`
	// タイトル (デフォルト: 見積書)
	Title *string `json:"title,omitempty"`
	// 概要
	Description *string `json:"description,omitempty"`
	// 見積書ステータス  (unsubmitted: 送付待ち, submitted: 送付済み)
	QuotationStatus *string `json:"quotation_status,omitempty"`
	// 見積書に表示する取引先名
	PartnerDisplayName string `json:"partner_display_name"`
	// 敬称（御中、様、(空白)の3つから選択）
	PartnerTitle string `json:"partner_title"`
	// 取引先担当者名
	PartnerContactInfo NullableString `json:"partner_contact_info,omitempty"`
	// 取引先郵便番号 (デフォルトはpartner_idもしくはpartner_codeで指定された取引先設定情報が補完されます)
	PartnerZipcode NullableString `json:"partner_zipcode,omitempty"`
	// 取引先都道府県コード（0:北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄) (デフォルトはpartner_idもしくはpartner_codeで指定された取引先設定情報が補完されます)
	PartnerPrefectureCode NullableInt32 `json:"partner_prefecture_code,omitempty"`
	// 取引先市区町村・番地 (デフォルトはpartner_idもしくはpartner_codeで指定された取引先設定情報が補完されます)
	PartnerAddress1 NullableString `json:"partner_address1,omitempty"`
	// 取引先建物名・部屋番号など (デフォルトはpartner_idもしくはpartner_codeで指定された取引先設定情報が補完されます)
	PartnerAddress2 NullableString `json:"partner_address2,omitempty"`
	// 事業所名 (デフォルトは事業所設定情報が補完されます)
	CompanyName *string `json:"company_name,omitempty"`
	// 郵便番号 (デフォルトは事業所設定情報が補完されます)
	CompanyZipcode *string `json:"company_zipcode,omitempty"`
	// 都道府県コード（0:北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄) (デフォルトは事業所設定情報が補完されます)
	CompanyPrefectureCode *int32 `json:"company_prefecture_code,omitempty"`
	// 市区町村・番地 (デフォルトは事業所設定情報が補完されます)
	CompanyAddress1 *string `json:"company_address1,omitempty"`
	// 建物名・部屋番号など (デフォルトは事業所設定情報が補完されます)
	CompanyAddress2 *string `json:"company_address2,omitempty"`
	// 事業所担当者名 (デフォルトは事業所設定情報が補完されます)
	CompanyContactInfo *string `json:"company_contact_info,omitempty"`
	// メッセージ (デフォルト: 下記の通り御見積申し上げます。)
	Message *string `json:"message,omitempty"`
	// 備考
	Notes *string `json:"notes,omitempty"`
	// 見積書レイアウト * `default_classic` - レイアウト１/クラシック (デフォルト)  * `standard_classic` - レイアウト２/クラシック  * `envelope_classic` - 封筒１/クラシック  * `default_modern` - レイアウト１/モダン  * `standard_modern` - レイアウト２/モダン  * `envelope_modern` - 封筒/モダン
	QuotationLayout *string `json:"quotation_layout,omitempty"`
	// 見積書の消費税計算方法(inclusive: 内税表示, exclusive: 外税表示 (デフォルト))
	TaxEntryMethod *string `json:"tax_entry_method,omitempty"`
	// 見積内容
	QuotationContents *[]InvoiceCreateParamsInvoiceContents `json:"quotation_contents,omitempty"`
}

// NewQuotationCreateParams instantiates a new QuotationCreateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotationCreateParams(companyId int32, partnerDisplayName string, partnerTitle string, ) *QuotationCreateParams {
	this := QuotationCreateParams{}
	this.CompanyId = companyId
	this.PartnerDisplayName = partnerDisplayName
	this.PartnerTitle = partnerTitle
	return &this
}

// NewQuotationCreateParamsWithDefaults instantiates a new QuotationCreateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotationCreateParamsWithDefaults() *QuotationCreateParams {
	this := QuotationCreateParams{}
	return &this
}

// GetCompanyId returns the CompanyId field value
func (o *QuotationCreateParams) GetCompanyId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetCompanyIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CompanyId, true
}

// SetCompanyId sets field value
func (o *QuotationCreateParams) SetCompanyId(v int32) {
	o.CompanyId = v
}

// GetIssueDate returns the IssueDate field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetIssueDate() string {
	if o == nil || o.IssueDate == nil {
		var ret string
		return ret
	}
	return *o.IssueDate
}

// GetIssueDateOk returns a tuple with the IssueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetIssueDateOk() (*string, bool) {
	if o == nil || o.IssueDate == nil {
		return nil, false
	}
	return o.IssueDate, true
}

// HasIssueDate returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasIssueDate() bool {
	if o != nil && o.IssueDate != nil {
		return true
	}

	return false
}

// SetIssueDate gets a reference to the given string and assigns it to the IssueDate field.
func (o *QuotationCreateParams) SetIssueDate(v string) {
	o.IssueDate = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationCreateParams) GetPartnerId() int32 {
	if o == nil || o.PartnerId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId.Get()
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationCreateParams) GetPartnerIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerId.Get(), o.PartnerId.IsSet()
}

// HasPartnerId returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasPartnerId() bool {
	if o != nil && o.PartnerId.IsSet() {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given NullableInt32 and assigns it to the PartnerId field.
func (o *QuotationCreateParams) SetPartnerId(v int32) {
	o.PartnerId.Set(&v)
}
// SetPartnerIdNil sets the value for PartnerId to be an explicit nil
func (o *QuotationCreateParams) SetPartnerIdNil() {
	o.PartnerId.Set(nil)
}

// UnsetPartnerId ensures that no value is present for PartnerId, not even an explicit nil
func (o *QuotationCreateParams) UnsetPartnerId() {
	o.PartnerId.Unset()
}

// GetPartnerCode returns the PartnerCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationCreateParams) GetPartnerCode() string {
	if o == nil || o.PartnerCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.PartnerCode.Get()
}

// GetPartnerCodeOk returns a tuple with the PartnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationCreateParams) GetPartnerCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerCode.Get(), o.PartnerCode.IsSet()
}

// HasPartnerCode returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasPartnerCode() bool {
	if o != nil && o.PartnerCode.IsSet() {
		return true
	}

	return false
}

// SetPartnerCode gets a reference to the given NullableString and assigns it to the PartnerCode field.
func (o *QuotationCreateParams) SetPartnerCode(v string) {
	o.PartnerCode.Set(&v)
}
// SetPartnerCodeNil sets the value for PartnerCode to be an explicit nil
func (o *QuotationCreateParams) SetPartnerCodeNil() {
	o.PartnerCode.Set(nil)
}

// UnsetPartnerCode ensures that no value is present for PartnerCode, not even an explicit nil
func (o *QuotationCreateParams) UnsetPartnerCode() {
	o.PartnerCode.Unset()
}

// GetQuotationNumber returns the QuotationNumber field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetQuotationNumber() string {
	if o == nil || o.QuotationNumber == nil {
		var ret string
		return ret
	}
	return *o.QuotationNumber
}

// GetQuotationNumberOk returns a tuple with the QuotationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetQuotationNumberOk() (*string, bool) {
	if o == nil || o.QuotationNumber == nil {
		return nil, false
	}
	return o.QuotationNumber, true
}

// HasQuotationNumber returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasQuotationNumber() bool {
	if o != nil && o.QuotationNumber != nil {
		return true
	}

	return false
}

// SetQuotationNumber gets a reference to the given string and assigns it to the QuotationNumber field.
func (o *QuotationCreateParams) SetQuotationNumber(v string) {
	o.QuotationNumber = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *QuotationCreateParams) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QuotationCreateParams) SetDescription(v string) {
	o.Description = &v
}

// GetQuotationStatus returns the QuotationStatus field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetQuotationStatus() string {
	if o == nil || o.QuotationStatus == nil {
		var ret string
		return ret
	}
	return *o.QuotationStatus
}

// GetQuotationStatusOk returns a tuple with the QuotationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetQuotationStatusOk() (*string, bool) {
	if o == nil || o.QuotationStatus == nil {
		return nil, false
	}
	return o.QuotationStatus, true
}

// HasQuotationStatus returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasQuotationStatus() bool {
	if o != nil && o.QuotationStatus != nil {
		return true
	}

	return false
}

// SetQuotationStatus gets a reference to the given string and assigns it to the QuotationStatus field.
func (o *QuotationCreateParams) SetQuotationStatus(v string) {
	o.QuotationStatus = &v
}

// GetPartnerDisplayName returns the PartnerDisplayName field value
func (o *QuotationCreateParams) GetPartnerDisplayName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PartnerDisplayName
}

// GetPartnerDisplayNameOk returns a tuple with the PartnerDisplayName field value
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetPartnerDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PartnerDisplayName, true
}

// SetPartnerDisplayName sets field value
func (o *QuotationCreateParams) SetPartnerDisplayName(v string) {
	o.PartnerDisplayName = v
}

// GetPartnerTitle returns the PartnerTitle field value
func (o *QuotationCreateParams) GetPartnerTitle() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PartnerTitle
}

// GetPartnerTitleOk returns a tuple with the PartnerTitle field value
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetPartnerTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PartnerTitle, true
}

// SetPartnerTitle sets field value
func (o *QuotationCreateParams) SetPartnerTitle(v string) {
	o.PartnerTitle = v
}

// GetPartnerContactInfo returns the PartnerContactInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationCreateParams) GetPartnerContactInfo() string {
	if o == nil || o.PartnerContactInfo.Get() == nil {
		var ret string
		return ret
	}
	return *o.PartnerContactInfo.Get()
}

// GetPartnerContactInfoOk returns a tuple with the PartnerContactInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationCreateParams) GetPartnerContactInfoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerContactInfo.Get(), o.PartnerContactInfo.IsSet()
}

// HasPartnerContactInfo returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasPartnerContactInfo() bool {
	if o != nil && o.PartnerContactInfo.IsSet() {
		return true
	}

	return false
}

// SetPartnerContactInfo gets a reference to the given NullableString and assigns it to the PartnerContactInfo field.
func (o *QuotationCreateParams) SetPartnerContactInfo(v string) {
	o.PartnerContactInfo.Set(&v)
}
// SetPartnerContactInfoNil sets the value for PartnerContactInfo to be an explicit nil
func (o *QuotationCreateParams) SetPartnerContactInfoNil() {
	o.PartnerContactInfo.Set(nil)
}

// UnsetPartnerContactInfo ensures that no value is present for PartnerContactInfo, not even an explicit nil
func (o *QuotationCreateParams) UnsetPartnerContactInfo() {
	o.PartnerContactInfo.Unset()
}

// GetPartnerZipcode returns the PartnerZipcode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationCreateParams) GetPartnerZipcode() string {
	if o == nil || o.PartnerZipcode.Get() == nil {
		var ret string
		return ret
	}
	return *o.PartnerZipcode.Get()
}

// GetPartnerZipcodeOk returns a tuple with the PartnerZipcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationCreateParams) GetPartnerZipcodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerZipcode.Get(), o.PartnerZipcode.IsSet()
}

// HasPartnerZipcode returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasPartnerZipcode() bool {
	if o != nil && o.PartnerZipcode.IsSet() {
		return true
	}

	return false
}

// SetPartnerZipcode gets a reference to the given NullableString and assigns it to the PartnerZipcode field.
func (o *QuotationCreateParams) SetPartnerZipcode(v string) {
	o.PartnerZipcode.Set(&v)
}
// SetPartnerZipcodeNil sets the value for PartnerZipcode to be an explicit nil
func (o *QuotationCreateParams) SetPartnerZipcodeNil() {
	o.PartnerZipcode.Set(nil)
}

// UnsetPartnerZipcode ensures that no value is present for PartnerZipcode, not even an explicit nil
func (o *QuotationCreateParams) UnsetPartnerZipcode() {
	o.PartnerZipcode.Unset()
}

// GetPartnerPrefectureCode returns the PartnerPrefectureCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationCreateParams) GetPartnerPrefectureCode() int32 {
	if o == nil || o.PartnerPrefectureCode.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PartnerPrefectureCode.Get()
}

// GetPartnerPrefectureCodeOk returns a tuple with the PartnerPrefectureCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationCreateParams) GetPartnerPrefectureCodeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerPrefectureCode.Get(), o.PartnerPrefectureCode.IsSet()
}

// HasPartnerPrefectureCode returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasPartnerPrefectureCode() bool {
	if o != nil && o.PartnerPrefectureCode.IsSet() {
		return true
	}

	return false
}

// SetPartnerPrefectureCode gets a reference to the given NullableInt32 and assigns it to the PartnerPrefectureCode field.
func (o *QuotationCreateParams) SetPartnerPrefectureCode(v int32) {
	o.PartnerPrefectureCode.Set(&v)
}
// SetPartnerPrefectureCodeNil sets the value for PartnerPrefectureCode to be an explicit nil
func (o *QuotationCreateParams) SetPartnerPrefectureCodeNil() {
	o.PartnerPrefectureCode.Set(nil)
}

// UnsetPartnerPrefectureCode ensures that no value is present for PartnerPrefectureCode, not even an explicit nil
func (o *QuotationCreateParams) UnsetPartnerPrefectureCode() {
	o.PartnerPrefectureCode.Unset()
}

// GetPartnerAddress1 returns the PartnerAddress1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationCreateParams) GetPartnerAddress1() string {
	if o == nil || o.PartnerAddress1.Get() == nil {
		var ret string
		return ret
	}
	return *o.PartnerAddress1.Get()
}

// GetPartnerAddress1Ok returns a tuple with the PartnerAddress1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationCreateParams) GetPartnerAddress1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerAddress1.Get(), o.PartnerAddress1.IsSet()
}

// HasPartnerAddress1 returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasPartnerAddress1() bool {
	if o != nil && o.PartnerAddress1.IsSet() {
		return true
	}

	return false
}

// SetPartnerAddress1 gets a reference to the given NullableString and assigns it to the PartnerAddress1 field.
func (o *QuotationCreateParams) SetPartnerAddress1(v string) {
	o.PartnerAddress1.Set(&v)
}
// SetPartnerAddress1Nil sets the value for PartnerAddress1 to be an explicit nil
func (o *QuotationCreateParams) SetPartnerAddress1Nil() {
	o.PartnerAddress1.Set(nil)
}

// UnsetPartnerAddress1 ensures that no value is present for PartnerAddress1, not even an explicit nil
func (o *QuotationCreateParams) UnsetPartnerAddress1() {
	o.PartnerAddress1.Unset()
}

// GetPartnerAddress2 returns the PartnerAddress2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationCreateParams) GetPartnerAddress2() string {
	if o == nil || o.PartnerAddress2.Get() == nil {
		var ret string
		return ret
	}
	return *o.PartnerAddress2.Get()
}

// GetPartnerAddress2Ok returns a tuple with the PartnerAddress2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationCreateParams) GetPartnerAddress2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerAddress2.Get(), o.PartnerAddress2.IsSet()
}

// HasPartnerAddress2 returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasPartnerAddress2() bool {
	if o != nil && o.PartnerAddress2.IsSet() {
		return true
	}

	return false
}

// SetPartnerAddress2 gets a reference to the given NullableString and assigns it to the PartnerAddress2 field.
func (o *QuotationCreateParams) SetPartnerAddress2(v string) {
	o.PartnerAddress2.Set(&v)
}
// SetPartnerAddress2Nil sets the value for PartnerAddress2 to be an explicit nil
func (o *QuotationCreateParams) SetPartnerAddress2Nil() {
	o.PartnerAddress2.Set(nil)
}

// UnsetPartnerAddress2 ensures that no value is present for PartnerAddress2, not even an explicit nil
func (o *QuotationCreateParams) UnsetPartnerAddress2() {
	o.PartnerAddress2.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *QuotationCreateParams) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCompanyZipcode returns the CompanyZipcode field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetCompanyZipcode() string {
	if o == nil || o.CompanyZipcode == nil {
		var ret string
		return ret
	}
	return *o.CompanyZipcode
}

// GetCompanyZipcodeOk returns a tuple with the CompanyZipcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetCompanyZipcodeOk() (*string, bool) {
	if o == nil || o.CompanyZipcode == nil {
		return nil, false
	}
	return o.CompanyZipcode, true
}

// HasCompanyZipcode returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasCompanyZipcode() bool {
	if o != nil && o.CompanyZipcode != nil {
		return true
	}

	return false
}

// SetCompanyZipcode gets a reference to the given string and assigns it to the CompanyZipcode field.
func (o *QuotationCreateParams) SetCompanyZipcode(v string) {
	o.CompanyZipcode = &v
}

// GetCompanyPrefectureCode returns the CompanyPrefectureCode field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetCompanyPrefectureCode() int32 {
	if o == nil || o.CompanyPrefectureCode == nil {
		var ret int32
		return ret
	}
	return *o.CompanyPrefectureCode
}

// GetCompanyPrefectureCodeOk returns a tuple with the CompanyPrefectureCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetCompanyPrefectureCodeOk() (*int32, bool) {
	if o == nil || o.CompanyPrefectureCode == nil {
		return nil, false
	}
	return o.CompanyPrefectureCode, true
}

// HasCompanyPrefectureCode returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasCompanyPrefectureCode() bool {
	if o != nil && o.CompanyPrefectureCode != nil {
		return true
	}

	return false
}

// SetCompanyPrefectureCode gets a reference to the given int32 and assigns it to the CompanyPrefectureCode field.
func (o *QuotationCreateParams) SetCompanyPrefectureCode(v int32) {
	o.CompanyPrefectureCode = &v
}

// GetCompanyAddress1 returns the CompanyAddress1 field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetCompanyAddress1() string {
	if o == nil || o.CompanyAddress1 == nil {
		var ret string
		return ret
	}
	return *o.CompanyAddress1
}

// GetCompanyAddress1Ok returns a tuple with the CompanyAddress1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetCompanyAddress1Ok() (*string, bool) {
	if o == nil || o.CompanyAddress1 == nil {
		return nil, false
	}
	return o.CompanyAddress1, true
}

// HasCompanyAddress1 returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasCompanyAddress1() bool {
	if o != nil && o.CompanyAddress1 != nil {
		return true
	}

	return false
}

// SetCompanyAddress1 gets a reference to the given string and assigns it to the CompanyAddress1 field.
func (o *QuotationCreateParams) SetCompanyAddress1(v string) {
	o.CompanyAddress1 = &v
}

// GetCompanyAddress2 returns the CompanyAddress2 field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetCompanyAddress2() string {
	if o == nil || o.CompanyAddress2 == nil {
		var ret string
		return ret
	}
	return *o.CompanyAddress2
}

// GetCompanyAddress2Ok returns a tuple with the CompanyAddress2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetCompanyAddress2Ok() (*string, bool) {
	if o == nil || o.CompanyAddress2 == nil {
		return nil, false
	}
	return o.CompanyAddress2, true
}

// HasCompanyAddress2 returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasCompanyAddress2() bool {
	if o != nil && o.CompanyAddress2 != nil {
		return true
	}

	return false
}

// SetCompanyAddress2 gets a reference to the given string and assigns it to the CompanyAddress2 field.
func (o *QuotationCreateParams) SetCompanyAddress2(v string) {
	o.CompanyAddress2 = &v
}

// GetCompanyContactInfo returns the CompanyContactInfo field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetCompanyContactInfo() string {
	if o == nil || o.CompanyContactInfo == nil {
		var ret string
		return ret
	}
	return *o.CompanyContactInfo
}

// GetCompanyContactInfoOk returns a tuple with the CompanyContactInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetCompanyContactInfoOk() (*string, bool) {
	if o == nil || o.CompanyContactInfo == nil {
		return nil, false
	}
	return o.CompanyContactInfo, true
}

// HasCompanyContactInfo returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasCompanyContactInfo() bool {
	if o != nil && o.CompanyContactInfo != nil {
		return true
	}

	return false
}

// SetCompanyContactInfo gets a reference to the given string and assigns it to the CompanyContactInfo field.
func (o *QuotationCreateParams) SetCompanyContactInfo(v string) {
	o.CompanyContactInfo = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *QuotationCreateParams) SetMessage(v string) {
	o.Message = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *QuotationCreateParams) SetNotes(v string) {
	o.Notes = &v
}

// GetQuotationLayout returns the QuotationLayout field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetQuotationLayout() string {
	if o == nil || o.QuotationLayout == nil {
		var ret string
		return ret
	}
	return *o.QuotationLayout
}

// GetQuotationLayoutOk returns a tuple with the QuotationLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetQuotationLayoutOk() (*string, bool) {
	if o == nil || o.QuotationLayout == nil {
		return nil, false
	}
	return o.QuotationLayout, true
}

// HasQuotationLayout returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasQuotationLayout() bool {
	if o != nil && o.QuotationLayout != nil {
		return true
	}

	return false
}

// SetQuotationLayout gets a reference to the given string and assigns it to the QuotationLayout field.
func (o *QuotationCreateParams) SetQuotationLayout(v string) {
	o.QuotationLayout = &v
}

// GetTaxEntryMethod returns the TaxEntryMethod field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetTaxEntryMethod() string {
	if o == nil || o.TaxEntryMethod == nil {
		var ret string
		return ret
	}
	return *o.TaxEntryMethod
}

// GetTaxEntryMethodOk returns a tuple with the TaxEntryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetTaxEntryMethodOk() (*string, bool) {
	if o == nil || o.TaxEntryMethod == nil {
		return nil, false
	}
	return o.TaxEntryMethod, true
}

// HasTaxEntryMethod returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasTaxEntryMethod() bool {
	if o != nil && o.TaxEntryMethod != nil {
		return true
	}

	return false
}

// SetTaxEntryMethod gets a reference to the given string and assigns it to the TaxEntryMethod field.
func (o *QuotationCreateParams) SetTaxEntryMethod(v string) {
	o.TaxEntryMethod = &v
}

// GetQuotationContents returns the QuotationContents field value if set, zero value otherwise.
func (o *QuotationCreateParams) GetQuotationContents() []InvoiceCreateParamsInvoiceContents {
	if o == nil || o.QuotationContents == nil {
		var ret []InvoiceCreateParamsInvoiceContents
		return ret
	}
	return *o.QuotationContents
}

// GetQuotationContentsOk returns a tuple with the QuotationContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotationCreateParams) GetQuotationContentsOk() (*[]InvoiceCreateParamsInvoiceContents, bool) {
	if o == nil || o.QuotationContents == nil {
		return nil, false
	}
	return o.QuotationContents, true
}

// HasQuotationContents returns a boolean if a field has been set.
func (o *QuotationCreateParams) HasQuotationContents() bool {
	if o != nil && o.QuotationContents != nil {
		return true
	}

	return false
}

// SetQuotationContents gets a reference to the given []InvoiceCreateParamsInvoiceContents and assigns it to the QuotationContents field.
func (o *QuotationCreateParams) SetQuotationContents(v []InvoiceCreateParamsInvoiceContents) {
	o.QuotationContents = &v
}

func (o QuotationCreateParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["company_id"] = o.CompanyId
	}
	if o.IssueDate != nil {
		toSerialize["issue_date"] = o.IssueDate
	}
	if o.PartnerId.IsSet() {
		toSerialize["partner_id"] = o.PartnerId.Get()
	}
	if o.PartnerCode.IsSet() {
		toSerialize["partner_code"] = o.PartnerCode.Get()
	}
	if o.QuotationNumber != nil {
		toSerialize["quotation_number"] = o.QuotationNumber
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.QuotationStatus != nil {
		toSerialize["quotation_status"] = o.QuotationStatus
	}
	if true {
		toSerialize["partner_display_name"] = o.PartnerDisplayName
	}
	if true {
		toSerialize["partner_title"] = o.PartnerTitle
	}
	if o.PartnerContactInfo.IsSet() {
		toSerialize["partner_contact_info"] = o.PartnerContactInfo.Get()
	}
	if o.PartnerZipcode.IsSet() {
		toSerialize["partner_zipcode"] = o.PartnerZipcode.Get()
	}
	if o.PartnerPrefectureCode.IsSet() {
		toSerialize["partner_prefecture_code"] = o.PartnerPrefectureCode.Get()
	}
	if o.PartnerAddress1.IsSet() {
		toSerialize["partner_address1"] = o.PartnerAddress1.Get()
	}
	if o.PartnerAddress2.IsSet() {
		toSerialize["partner_address2"] = o.PartnerAddress2.Get()
	}
	if o.CompanyName != nil {
		toSerialize["company_name"] = o.CompanyName
	}
	if o.CompanyZipcode != nil {
		toSerialize["company_zipcode"] = o.CompanyZipcode
	}
	if o.CompanyPrefectureCode != nil {
		toSerialize["company_prefecture_code"] = o.CompanyPrefectureCode
	}
	if o.CompanyAddress1 != nil {
		toSerialize["company_address1"] = o.CompanyAddress1
	}
	if o.CompanyAddress2 != nil {
		toSerialize["company_address2"] = o.CompanyAddress2
	}
	if o.CompanyContactInfo != nil {
		toSerialize["company_contact_info"] = o.CompanyContactInfo
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.QuotationLayout != nil {
		toSerialize["quotation_layout"] = o.QuotationLayout
	}
	if o.TaxEntryMethod != nil {
		toSerialize["tax_entry_method"] = o.TaxEntryMethod
	}
	if o.QuotationContents != nil {
		toSerialize["quotation_contents"] = o.QuotationContents
	}
	return json.Marshal(toSerialize)
}

type NullableQuotationCreateParams struct {
	value *QuotationCreateParams
	isSet bool
}

func (v NullableQuotationCreateParams) Get() *QuotationCreateParams {
	return v.value
}

func (v *NullableQuotationCreateParams) Set(val *QuotationCreateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotationCreateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotationCreateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotationCreateParams(val *QuotationCreateParams) *NullableQuotationCreateParams {
	return &NullableQuotationCreateParams{value: val, isSet: true}
}

func (v NullableQuotationCreateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotationCreateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


