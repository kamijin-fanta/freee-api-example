/*
 * freee API
 *
 *  <h1 id=\"freee_api\">freee API</h1> <hr /> <h2 id=\"start_guide\">スタートガイド</h2>  <p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>  <hr /> <h2 id=\"specification\">仕様</h2>  <pre><code>【重要】会計freee APIの新バージョンについて 2020年12月まで、2つのバージョンが利用できる状態です。古いものは2020年12月に利用不可となります。<br> 新しいAPIを利用するにはリクエストヘッダーに以下を指定します。 X-Api-Version: 2020-06-15<br> 指定がない場合は2020年12月に廃止予定のAPIを利用することとなります。<br> 【重要】APIのバージョン指定をせずに利用し続ける場合 2020年12月に新しいバージョンのAPIに自動的に切り替わります。 詳細は、<a href=\"https://developer.freee.co.jp/release-note/2948\" target=\"_blank\">リリースノート</a>をご覧ください。<br> 旧バージョンのAPIリファレンスを確認したい場合は、<a href=\"https://freee.github.io/freee-api-schema/\" target=\"_blank\">旧バージョンのAPIリファレンスページ</a>をご覧ください。 </code></pre>  <h3 id=\"api_endpoint\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/ (httpsのみ)</p>  <h3 id=\"about_authorize\">認証について</h3> <p>OAuth2.0を利用します。詳細は<a href=\"https://developer.freee.co.jp/docs\" target=\"_blank\">ドキュメントの認証</a>パートを参照してください。</p>  <h3 id=\"data_format\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>  <h3 id=\"compatibility\">後方互換性ありの変更</h3>  <p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>  <ul> <li>新しいAPIリソース・エンドポイントの追加</li> <li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li> <li>既存のAPIレスポンスに対する新しいプロパティの追加</li> <li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li> <li>keyとなっているidやcodeの長さの変更（長くする）</li> </ul>  <h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Freee-Request-ID</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"common_error_response\">共通エラーレスポンス</h3>  <ul> <li> <p>ステータスコードはレスポンス内のJSONに含まれる他、HTTPヘッダにも含まれる</p> </li> <li> <p>一部のエラーレスポンスにはエラーコードが含まれます。<br>詳細は、<a href=\"https://developer.freee.co.jp/tips/faq/40x-checkpoint\">HTTPステータスコード400台エラー時のチェックポイント</a>を参照してください</p> </li> <p>type</p>  <ul> <li>status : HTTPステータスコードの説明</li>  <li>validation : エラーの詳細の説明（開発者向け）</li> </ul> </li> </ul>  <p>レスポンスの例</p>  <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;status&quot;,         &quot;messages&quot; : [&quot;不正なリクエストです。&quot;]       },       {         &quot;type&quot; : &quot;validation&quot;,         &quot;messages&quot; : [&quot;Date は不正な日付フォーマットです。入力例：2013-01-01&quot;]       }     ]   }</code></pre>  </br>  <h3 id=\"api_rate_limit\">API使用制限</h3>    <p>freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。</p>   <p>その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>  <h4 id=\"reports_api_endpoint\">/reportsと/receipts/{id}/downloadエンドポイント</h4>  <p>freeeはエンドポイント毎に一定頻度以上のアクセスを検知した場合、APIアクセスをコントロールする場合があります。その際のhttp status codeは429（too many requests）となります。</p>  <ul>   <li>/reports:1秒に10回まで</li>   <li>/receipts/{id}/download:1秒に3回まで</li> </ul>  <p>レスポンスボディのmetaプロパティに以下を含めます。</p>  <ul>   <li>設定されている上限値</li>   <li>上限に達するまでの使用可能回数</li>   <li>（上限値に達した場合）使用回数がリセットされる時刻</li> </ul>  <h3 id=\"plan_api_rate_limit\">プラン別のAPI Rate Limit</h3>   <table border=\"1\">     <tbody>       <tr>         <th style=\"padding: 10px\"><strong>会計freeeプラン名</strong></th>         <th style=\"padding: 10px\"><strong>事業所とアプリケーション毎に1日でのAPIコール数</strong></th>       </tr>       <tr>         <td style=\"padding: 10px\">エンタープライズ</td>         <td style=\"padding: 10px\">10,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">プロフェッショナル</td>         <td style=\"padding: 10px\">5,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ベーシック</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ミニマム</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">上記以外</td>         <td style=\"padding: 10px\">3,000</td>       </tr>     </tbody>   </table>  <h3 id=\"webhook\">Webhookについて</h3>  <p>詳細は<a href=\"https://developer.freee.co.jp/docs/accounting/webhook\" target=\"_blank\">会計Webhook概要</a>を参照してください。</p>  <hr /> <h2 id=\"contact\">連絡先</h2>  <p>ご不明点、ご要望等は <a href=\"https://support.freee.co.jp/hc/ja/requests/new\">freee サポートデスクへのお問い合わせフォーム</a> からご連絡ください。</p> <hr />&copy; Since 2013 freee K.K.
 *
 * API version: v1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package freee

import (
	"encoding/json"
)

// PaymentRequestCreateParams struct for PaymentRequestCreateParams
type PaymentRequestCreateParams struct {
	// 事業所ID
	CompanyId int32 `json:"company_id"`
	// 申請タイトル
	Title string `json:"title"`
	// 申請日 (yyyy-mm-dd)
	ApplicationDate string `json:"application_date"`
	// 備考
	Description *string `json:"description,omitempty"`
	// 支払依頼の項目行一覧（配列）
	PaymentRequestLines []PaymentRequestCreateParamsPaymentRequestLines `json:"payment_request_lines"`
	// 承認者のユーザーID<br> 「承認者を指定」の経路を申請経路として使用する場合に指定してください。<br> 指定する承認者のユーザーIDは、申請経路APIを利用して取得してください。 
	ApproverId *int32 `json:"approver_id,omitempty"`
	// 申請経路ID<br> <ul>     <li>支払依頼のステータスを申請中として作成する場合は、必ず指定してください。</li>     <li>指定する申請経路IDは、申請経路APIを利用して取得してください。</li>     <li>         未指定の場合は、基本経路を設定している事業所では基本経路が、基本経路を設定していない事業所では利用可能な申請経路の中から最初の申請経路が自動的に使用されます。         <ul>            <li>意図しない申請経路を持った支払依頼の作成を防ぐために、使用する申請経路IDを指定することを推奨します。</li>         </ul>     </li> </ul> 
	ApprovalFlowRouteId int32 `json:"approval_flow_route_id"`
	// 親申請ID(法人向け エンタープライズプラン、プロフェッショナルプラン)<br> <ul>   <li>承認済みの既存各種申請IDのみ指定可能です。</li>   <li>各種申請一覧APIを利用して取得してください。</li> </ul> 
	ParentId *int32 `json:"parent_id,omitempty"`
	// 支払依頼のステータス<br> falseを指定した時は申請中（in_progress）で支払依頼を作成します。<br> trueを指定した時は下書き（draft）で支払依頼を作成します。<br> 未指定の時は下書きとみなして支払依頼を作成します。 
	Draft bool `json:"draft"`
	// 請求書番号
	DocumentCode *string `json:"document_code,omitempty"`
	// 証憑ファイルID（配列）
	ReceiptIds *[]int32 `json:"receipt_ids,omitempty"`
	// 発生日 (yyyy-mm-dd)
	IssueDate string `json:"issue_date"`
	// 支払期限 (yyyy-mm-dd)
	PaymentDate NullableString `json:"payment_date,omitempty"`
	// 支払方法(none: 指定なし, domestic_bank_transfer: 国内振込, abroad_bank_transfer: 国外振込, account_transfer: 口座振替, credit_card: クレジットカード)
	PaymentMethod string `json:"payment_method"`
	// 取引先ID
	PartnerId NullableInt32 `json:"partner_id,omitempty"`
	// 取引先コード
	PartnerCode NullableString `json:"partner_code,omitempty"`
	// 銀行番号
	BankCode *string `json:"bank_code,omitempty"`
	// 銀行名
	BankName *string `json:"bank_name,omitempty"`
	// 銀行名（カナ）<br> 支払先指定時には無効 
	BankNameKana *string `json:"bank_name_kana,omitempty"`
	// 支店番号<br> 支払先指定時には無効 
	BranchCode *string `json:"branch_code,omitempty"`
	// 支店名<br> 支払先指定時には無効 
	BranchName *string `json:"branch_name,omitempty"`
	// 支店名（カナ）<br> 支払先指定時には無効 
	BranchKana *string `json:"branch_kana,omitempty"`
	// 受取人名（カナ）<br> 支払先指定時には無効 
	AccountName *string `json:"account_name,omitempty"`
	// 口座番号<br> 支払先指定時には無効 
	AccountNumber *string `json:"account_number,omitempty"`
	// '口座種別(ordinary:普通、checking:当座、earmarked:納税準備預金、savings:貯蓄、other:その他)'<br> 支払先指定時には無効<br> 支払先未指定時には必須 
	AccountType *string `json:"account_type,omitempty"`
}

// NewPaymentRequestCreateParams instantiates a new PaymentRequestCreateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentRequestCreateParams(companyId int32, title string, applicationDate string, paymentRequestLines []PaymentRequestCreateParamsPaymentRequestLines, approvalFlowRouteId int32, draft bool, issueDate string, paymentMethod string, ) *PaymentRequestCreateParams {
	this := PaymentRequestCreateParams{}
	this.CompanyId = companyId
	this.Title = title
	this.ApplicationDate = applicationDate
	this.PaymentRequestLines = paymentRequestLines
	this.ApprovalFlowRouteId = approvalFlowRouteId
	this.Draft = draft
	this.IssueDate = issueDate
	this.PaymentMethod = paymentMethod
	return &this
}

// NewPaymentRequestCreateParamsWithDefaults instantiates a new PaymentRequestCreateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentRequestCreateParamsWithDefaults() *PaymentRequestCreateParams {
	this := PaymentRequestCreateParams{}
	return &this
}

// GetCompanyId returns the CompanyId field value
func (o *PaymentRequestCreateParams) GetCompanyId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetCompanyIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CompanyId, true
}

// SetCompanyId sets field value
func (o *PaymentRequestCreateParams) SetCompanyId(v int32) {
	o.CompanyId = v
}

// GetTitle returns the Title field value
func (o *PaymentRequestCreateParams) GetTitle() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PaymentRequestCreateParams) SetTitle(v string) {
	o.Title = v
}

// GetApplicationDate returns the ApplicationDate field value
func (o *PaymentRequestCreateParams) GetApplicationDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ApplicationDate
}

// GetApplicationDateOk returns a tuple with the ApplicationDate field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetApplicationDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ApplicationDate, true
}

// SetApplicationDate sets field value
func (o *PaymentRequestCreateParams) SetApplicationDate(v string) {
	o.ApplicationDate = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentRequestCreateParams) SetDescription(v string) {
	o.Description = &v
}

// GetPaymentRequestLines returns the PaymentRequestLines field value
func (o *PaymentRequestCreateParams) GetPaymentRequestLines() []PaymentRequestCreateParamsPaymentRequestLines {
	if o == nil  {
		var ret []PaymentRequestCreateParamsPaymentRequestLines
		return ret
	}

	return o.PaymentRequestLines
}

// GetPaymentRequestLinesOk returns a tuple with the PaymentRequestLines field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetPaymentRequestLinesOk() (*[]PaymentRequestCreateParamsPaymentRequestLines, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PaymentRequestLines, true
}

// SetPaymentRequestLines sets field value
func (o *PaymentRequestCreateParams) SetPaymentRequestLines(v []PaymentRequestCreateParamsPaymentRequestLines) {
	o.PaymentRequestLines = v
}

// GetApproverId returns the ApproverId field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetApproverId() int32 {
	if o == nil || o.ApproverId == nil {
		var ret int32
		return ret
	}
	return *o.ApproverId
}

// GetApproverIdOk returns a tuple with the ApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetApproverIdOk() (*int32, bool) {
	if o == nil || o.ApproverId == nil {
		return nil, false
	}
	return o.ApproverId, true
}

// HasApproverId returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasApproverId() bool {
	if o != nil && o.ApproverId != nil {
		return true
	}

	return false
}

// SetApproverId gets a reference to the given int32 and assigns it to the ApproverId field.
func (o *PaymentRequestCreateParams) SetApproverId(v int32) {
	o.ApproverId = &v
}

// GetApprovalFlowRouteId returns the ApprovalFlowRouteId field value
func (o *PaymentRequestCreateParams) GetApprovalFlowRouteId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ApprovalFlowRouteId
}

// GetApprovalFlowRouteIdOk returns a tuple with the ApprovalFlowRouteId field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetApprovalFlowRouteIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ApprovalFlowRouteId, true
}

// SetApprovalFlowRouteId sets field value
func (o *PaymentRequestCreateParams) SetApprovalFlowRouteId(v int32) {
	o.ApprovalFlowRouteId = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetParentId() int32 {
	if o == nil || o.ParentId == nil {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetParentIdOk() (*int32, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *PaymentRequestCreateParams) SetParentId(v int32) {
	o.ParentId = &v
}

// GetDraft returns the Draft field value
func (o *PaymentRequestCreateParams) GetDraft() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Draft
}

// GetDraftOk returns a tuple with the Draft field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetDraftOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Draft, true
}

// SetDraft sets field value
func (o *PaymentRequestCreateParams) SetDraft(v bool) {
	o.Draft = v
}

// GetDocumentCode returns the DocumentCode field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetDocumentCode() string {
	if o == nil || o.DocumentCode == nil {
		var ret string
		return ret
	}
	return *o.DocumentCode
}

// GetDocumentCodeOk returns a tuple with the DocumentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetDocumentCodeOk() (*string, bool) {
	if o == nil || o.DocumentCode == nil {
		return nil, false
	}
	return o.DocumentCode, true
}

// HasDocumentCode returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasDocumentCode() bool {
	if o != nil && o.DocumentCode != nil {
		return true
	}

	return false
}

// SetDocumentCode gets a reference to the given string and assigns it to the DocumentCode field.
func (o *PaymentRequestCreateParams) SetDocumentCode(v string) {
	o.DocumentCode = &v
}

// GetReceiptIds returns the ReceiptIds field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetReceiptIds() []int32 {
	if o == nil || o.ReceiptIds == nil {
		var ret []int32
		return ret
	}
	return *o.ReceiptIds
}

// GetReceiptIdsOk returns a tuple with the ReceiptIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetReceiptIdsOk() (*[]int32, bool) {
	if o == nil || o.ReceiptIds == nil {
		return nil, false
	}
	return o.ReceiptIds, true
}

// HasReceiptIds returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasReceiptIds() bool {
	if o != nil && o.ReceiptIds != nil {
		return true
	}

	return false
}

// SetReceiptIds gets a reference to the given []int32 and assigns it to the ReceiptIds field.
func (o *PaymentRequestCreateParams) SetReceiptIds(v []int32) {
	o.ReceiptIds = &v
}

// GetIssueDate returns the IssueDate field value
func (o *PaymentRequestCreateParams) GetIssueDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.IssueDate
}

// GetIssueDateOk returns a tuple with the IssueDate field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetIssueDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IssueDate, true
}

// SetIssueDate sets field value
func (o *PaymentRequestCreateParams) SetIssueDate(v string) {
	o.IssueDate = v
}

// GetPaymentDate returns the PaymentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentRequestCreateParams) GetPaymentDate() string {
	if o == nil || o.PaymentDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.PaymentDate.Get()
}

// GetPaymentDateOk returns a tuple with the PaymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentRequestCreateParams) GetPaymentDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PaymentDate.Get(), o.PaymentDate.IsSet()
}

// HasPaymentDate returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasPaymentDate() bool {
	if o != nil && o.PaymentDate.IsSet() {
		return true
	}

	return false
}

// SetPaymentDate gets a reference to the given NullableString and assigns it to the PaymentDate field.
func (o *PaymentRequestCreateParams) SetPaymentDate(v string) {
	o.PaymentDate.Set(&v)
}
// SetPaymentDateNil sets the value for PaymentDate to be an explicit nil
func (o *PaymentRequestCreateParams) SetPaymentDateNil() {
	o.PaymentDate.Set(nil)
}

// UnsetPaymentDate ensures that no value is present for PaymentDate, not even an explicit nil
func (o *PaymentRequestCreateParams) UnsetPaymentDate() {
	o.PaymentDate.Unset()
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *PaymentRequestCreateParams) GetPaymentMethod() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetPaymentMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *PaymentRequestCreateParams) SetPaymentMethod(v string) {
	o.PaymentMethod = v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentRequestCreateParams) GetPartnerId() int32 {
	if o == nil || o.PartnerId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId.Get()
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentRequestCreateParams) GetPartnerIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerId.Get(), o.PartnerId.IsSet()
}

// HasPartnerId returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasPartnerId() bool {
	if o != nil && o.PartnerId.IsSet() {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given NullableInt32 and assigns it to the PartnerId field.
func (o *PaymentRequestCreateParams) SetPartnerId(v int32) {
	o.PartnerId.Set(&v)
}
// SetPartnerIdNil sets the value for PartnerId to be an explicit nil
func (o *PaymentRequestCreateParams) SetPartnerIdNil() {
	o.PartnerId.Set(nil)
}

// UnsetPartnerId ensures that no value is present for PartnerId, not even an explicit nil
func (o *PaymentRequestCreateParams) UnsetPartnerId() {
	o.PartnerId.Unset()
}

// GetPartnerCode returns the PartnerCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentRequestCreateParams) GetPartnerCode() string {
	if o == nil || o.PartnerCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.PartnerCode.Get()
}

// GetPartnerCodeOk returns a tuple with the PartnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentRequestCreateParams) GetPartnerCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PartnerCode.Get(), o.PartnerCode.IsSet()
}

// HasPartnerCode returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasPartnerCode() bool {
	if o != nil && o.PartnerCode.IsSet() {
		return true
	}

	return false
}

// SetPartnerCode gets a reference to the given NullableString and assigns it to the PartnerCode field.
func (o *PaymentRequestCreateParams) SetPartnerCode(v string) {
	o.PartnerCode.Set(&v)
}
// SetPartnerCodeNil sets the value for PartnerCode to be an explicit nil
func (o *PaymentRequestCreateParams) SetPartnerCodeNil() {
	o.PartnerCode.Set(nil)
}

// UnsetPartnerCode ensures that no value is present for PartnerCode, not even an explicit nil
func (o *PaymentRequestCreateParams) UnsetPartnerCode() {
	o.PartnerCode.Unset()
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetBankCode() string {
	if o == nil || o.BankCode == nil {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetBankCodeOk() (*string, bool) {
	if o == nil || o.BankCode == nil {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasBankCode() bool {
	if o != nil && o.BankCode != nil {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *PaymentRequestCreateParams) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetBankName() string {
	if o == nil || o.BankName == nil {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetBankNameOk() (*string, bool) {
	if o == nil || o.BankName == nil {
		return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasBankName() bool {
	if o != nil && o.BankName != nil {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *PaymentRequestCreateParams) SetBankName(v string) {
	o.BankName = &v
}

// GetBankNameKana returns the BankNameKana field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetBankNameKana() string {
	if o == nil || o.BankNameKana == nil {
		var ret string
		return ret
	}
	return *o.BankNameKana
}

// GetBankNameKanaOk returns a tuple with the BankNameKana field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetBankNameKanaOk() (*string, bool) {
	if o == nil || o.BankNameKana == nil {
		return nil, false
	}
	return o.BankNameKana, true
}

// HasBankNameKana returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasBankNameKana() bool {
	if o != nil && o.BankNameKana != nil {
		return true
	}

	return false
}

// SetBankNameKana gets a reference to the given string and assigns it to the BankNameKana field.
func (o *PaymentRequestCreateParams) SetBankNameKana(v string) {
	o.BankNameKana = &v
}

// GetBranchCode returns the BranchCode field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetBranchCode() string {
	if o == nil || o.BranchCode == nil {
		var ret string
		return ret
	}
	return *o.BranchCode
}

// GetBranchCodeOk returns a tuple with the BranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetBranchCodeOk() (*string, bool) {
	if o == nil || o.BranchCode == nil {
		return nil, false
	}
	return o.BranchCode, true
}

// HasBranchCode returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasBranchCode() bool {
	if o != nil && o.BranchCode != nil {
		return true
	}

	return false
}

// SetBranchCode gets a reference to the given string and assigns it to the BranchCode field.
func (o *PaymentRequestCreateParams) SetBranchCode(v string) {
	o.BranchCode = &v
}

// GetBranchName returns the BranchName field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetBranchName() string {
	if o == nil || o.BranchName == nil {
		var ret string
		return ret
	}
	return *o.BranchName
}

// GetBranchNameOk returns a tuple with the BranchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetBranchNameOk() (*string, bool) {
	if o == nil || o.BranchName == nil {
		return nil, false
	}
	return o.BranchName, true
}

// HasBranchName returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasBranchName() bool {
	if o != nil && o.BranchName != nil {
		return true
	}

	return false
}

// SetBranchName gets a reference to the given string and assigns it to the BranchName field.
func (o *PaymentRequestCreateParams) SetBranchName(v string) {
	o.BranchName = &v
}

// GetBranchKana returns the BranchKana field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetBranchKana() string {
	if o == nil || o.BranchKana == nil {
		var ret string
		return ret
	}
	return *o.BranchKana
}

// GetBranchKanaOk returns a tuple with the BranchKana field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetBranchKanaOk() (*string, bool) {
	if o == nil || o.BranchKana == nil {
		return nil, false
	}
	return o.BranchKana, true
}

// HasBranchKana returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasBranchKana() bool {
	if o != nil && o.BranchKana != nil {
		return true
	}

	return false
}

// SetBranchKana gets a reference to the given string and assigns it to the BranchKana field.
func (o *PaymentRequestCreateParams) SetBranchKana(v string) {
	o.BranchKana = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *PaymentRequestCreateParams) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetAccountNumber() string {
	if o == nil || o.AccountNumber == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetAccountNumberOk() (*string, bool) {
	if o == nil || o.AccountNumber == nil {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasAccountNumber() bool {
	if o != nil && o.AccountNumber != nil {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *PaymentRequestCreateParams) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *PaymentRequestCreateParams) GetAccountType() string {
	if o == nil || o.AccountType == nil {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequestCreateParams) GetAccountTypeOk() (*string, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *PaymentRequestCreateParams) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *PaymentRequestCreateParams) SetAccountType(v string) {
	o.AccountType = &v
}

func (o PaymentRequestCreateParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["company_id"] = o.CompanyId
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["application_date"] = o.ApplicationDate
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["payment_request_lines"] = o.PaymentRequestLines
	}
	if o.ApproverId != nil {
		toSerialize["approver_id"] = o.ApproverId
	}
	if true {
		toSerialize["approval_flow_route_id"] = o.ApprovalFlowRouteId
	}
	if o.ParentId != nil {
		toSerialize["parent_id"] = o.ParentId
	}
	if true {
		toSerialize["draft"] = o.Draft
	}
	if o.DocumentCode != nil {
		toSerialize["document_code"] = o.DocumentCode
	}
	if o.ReceiptIds != nil {
		toSerialize["receipt_ids"] = o.ReceiptIds
	}
	if true {
		toSerialize["issue_date"] = o.IssueDate
	}
	if o.PaymentDate.IsSet() {
		toSerialize["payment_date"] = o.PaymentDate.Get()
	}
	if true {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if o.PartnerId.IsSet() {
		toSerialize["partner_id"] = o.PartnerId.Get()
	}
	if o.PartnerCode.IsSet() {
		toSerialize["partner_code"] = o.PartnerCode.Get()
	}
	if o.BankCode != nil {
		toSerialize["bank_code"] = o.BankCode
	}
	if o.BankName != nil {
		toSerialize["bank_name"] = o.BankName
	}
	if o.BankNameKana != nil {
		toSerialize["bank_name_kana"] = o.BankNameKana
	}
	if o.BranchCode != nil {
		toSerialize["branch_code"] = o.BranchCode
	}
	if o.BranchName != nil {
		toSerialize["branch_name"] = o.BranchName
	}
	if o.BranchKana != nil {
		toSerialize["branch_kana"] = o.BranchKana
	}
	if o.AccountName != nil {
		toSerialize["account_name"] = o.AccountName
	}
	if o.AccountNumber != nil {
		toSerialize["account_number"] = o.AccountNumber
	}
	if o.AccountType != nil {
		toSerialize["account_type"] = o.AccountType
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentRequestCreateParams struct {
	value *PaymentRequestCreateParams
	isSet bool
}

func (v NullablePaymentRequestCreateParams) Get() *PaymentRequestCreateParams {
	return v.value
}

func (v *NullablePaymentRequestCreateParams) Set(val *PaymentRequestCreateParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentRequestCreateParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentRequestCreateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentRequestCreateParams(val *PaymentRequestCreateParams) *NullablePaymentRequestCreateParams {
	return &NullablePaymentRequestCreateParams{value: val, isSet: true}
}

func (v NullablePaymentRequestCreateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentRequestCreateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


