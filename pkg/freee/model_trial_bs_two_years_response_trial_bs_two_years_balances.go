/*
 * freee API
 *
 *  <h1 id=\"freee_api\">freee API</h1> <hr /> <h2 id=\"start_guide\">スタートガイド</h2>  <p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>  <hr /> <h2 id=\"specification\">仕様</h2>  <pre><code>【重要】会計freee APIの新バージョンについて 2020年12月まで、2つのバージョンが利用できる状態です。古いものは2020年12月に利用不可となります。<br> 新しいAPIを利用するにはリクエストヘッダーに以下を指定します。 X-Api-Version: 2020-06-15<br> 指定がない場合は2020年12月に廃止予定のAPIを利用することとなります。<br> 【重要】APIのバージョン指定をせずに利用し続ける場合 2020年12月に新しいバージョンのAPIに自動的に切り替わります。 詳細は、<a href=\"https://developer.freee.co.jp/release-note/2948\" target=\"_blank\">リリースノート</a>をご覧ください。<br> 旧バージョンのAPIリファレンスを確認したい場合は、<a href=\"https://freee.github.io/freee-api-schema/\" target=\"_blank\">旧バージョンのAPIリファレンスページ</a>をご覧ください。 </code></pre>  <h3 id=\"api_endpoint\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/ (httpsのみ)</p>  <h3 id=\"about_authorize\">認証について</h3> <p>OAuth2.0を利用します。詳細は<a href=\"https://developer.freee.co.jp/docs\" target=\"_blank\">ドキュメントの認証</a>パートを参照してください。</p>  <h3 id=\"data_format\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>  <h3 id=\"compatibility\">後方互換性ありの変更</h3>  <p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>  <ul> <li>新しいAPIリソース・エンドポイントの追加</li> <li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li> <li>既存のAPIレスポンスに対する新しいプロパティの追加</li> <li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li> <li>keyとなっているidやcodeの長さの変更（長くする）</li> </ul>  <h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Freee-Request-ID</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"common_error_response\">共通エラーレスポンス</h3>  <ul> <li> <p>ステータスコードはレスポンス内のJSONに含まれる他、HTTPヘッダにも含まれる</p> </li> <li> <p>一部のエラーレスポンスにはエラーコードが含まれます。<br>詳細は、<a href=\"https://developer.freee.co.jp/tips/faq/40x-checkpoint\">HTTPステータスコード400台エラー時のチェックポイント</a>を参照してください</p> </li> <p>type</p>  <ul> <li>status : HTTPステータスコードの説明</li>  <li>validation : エラーの詳細の説明（開発者向け）</li> </ul> </li> </ul>  <p>レスポンスの例</p>  <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;status&quot;,         &quot;messages&quot; : [&quot;不正なリクエストです。&quot;]       },       {         &quot;type&quot; : &quot;validation&quot;,         &quot;messages&quot; : [&quot;Date は不正な日付フォーマットです。入力例：2013-01-01&quot;]       }     ]   }</code></pre>  </br>  <h3 id=\"api_rate_limit\">API使用制限</h3>    <p>freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。</p>   <p>その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>  <h4 id=\"reports_api_endpoint\">/reportsと/receipts/{id}/downloadエンドポイント</h4>  <p>freeeはエンドポイント毎に一定頻度以上のアクセスを検知した場合、APIアクセスをコントロールする場合があります。その際のhttp status codeは429（too many requests）となります。</p>  <ul>   <li>/reports:1秒に10回まで</li>   <li>/receipts/{id}/download:1秒に3回まで</li> </ul>  <p>レスポンスボディのmetaプロパティに以下を含めます。</p>  <ul>   <li>設定されている上限値</li>   <li>上限に達するまでの使用可能回数</li>   <li>（上限値に達した場合）使用回数がリセットされる時刻</li> </ul>  <h3 id=\"plan_api_rate_limit\">プラン別のAPI Rate Limit</h3>   <table border=\"1\">     <tbody>       <tr>         <th style=\"padding: 10px\"><strong>会計freeeプラン名</strong></th>         <th style=\"padding: 10px\"><strong>事業所とアプリケーション毎に1日でのAPIコール数</strong></th>       </tr>       <tr>         <td style=\"padding: 10px\">エンタープライズ</td>         <td style=\"padding: 10px\">10,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">プロフェッショナル</td>         <td style=\"padding: 10px\">5,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ベーシック</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ミニマム</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">上記以外</td>         <td style=\"padding: 10px\">3,000</td>       </tr>     </tbody>   </table>  <h3 id=\"webhook\">Webhookについて</h3>  <p>詳細は<a href=\"https://developer.freee.co.jp/docs/accounting/webhook\" target=\"_blank\">会計Webhook概要</a>を参照してください。</p>  <hr /> <h2 id=\"contact\">連絡先</h2>  <p>ご不明点、ご要望等は <a href=\"https://support.freee.co.jp/hc/ja/requests/new\">freee サポートデスクへのお問い合わせフォーム</a> からご連絡ください。</p> <hr />&copy; Since 2013 freee K.K.
 *
 * API version: v1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package freee

import (
	"encoding/json"
)

// TrialBsTwoYearsResponseTrialBsTwoYearsBalances struct for TrialBsTwoYearsResponseTrialBsTwoYearsBalances
type TrialBsTwoYearsResponseTrialBsTwoYearsBalances struct {
	// 勘定科目ID(勘定科目の時のみ含まれる)
	AccountItemId *int32 `json:"account_item_id,omitempty"`
	// 勘定科目名(勘定科目の時のみ含まれる)
	AccountItemName *string `json:"account_item_name,omitempty"`
	// 決算書表示名(account_item_display_type:group指定時に決算書表示名の時のみ含まれる)
	AccountGroupName *string `json:"account_group_name,omitempty"`
	// breakdown_display_type:partner, account_item_display_type:account_item指定時のみ含まれる
	Partners *[]TrialBsTwoYearsResponseTrialBsTwoYearsPartners `json:"partners,omitempty"`
	// breakdown_display_type:item, account_item_display_type:account_item指定時のみ含まれる
	Items *[]TrialBsTwoYearsResponseTrialBsTwoYearsItems `json:"items,omitempty"`
	// 勘定科目カテゴリー名
	AccountCategoryName *string `json:"account_category_name,omitempty"`
	// 合計行(勘定科目カテゴリーの時のみ含まれる)
	TotalLine *bool `json:"total_line,omitempty"`
	// 階層レベル
	HierarchyLevel *int32 `json:"hierarchy_level,omitempty"`
	// 上位勘定科目カテゴリー名(勘定科目カテゴリーの時のみ、上層が存在する場合含まれる)
	ParentAccountCategoryName *string `json:"parent_account_category_name,omitempty"`
	// 前年度期末残高
	LastYearClosingBalance *int32 `json:"last_year_closing_balance,omitempty"`
	// 期末残高
	ClosingBalance *int32 `json:"closing_balance,omitempty"`
	// 前年比
	YearOnYear *float32 `json:"year_on_year,omitempty"`
}

// NewTrialBsTwoYearsResponseTrialBsTwoYearsBalances instantiates a new TrialBsTwoYearsResponseTrialBsTwoYearsBalances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrialBsTwoYearsResponseTrialBsTwoYearsBalances() *TrialBsTwoYearsResponseTrialBsTwoYearsBalances {
	this := TrialBsTwoYearsResponseTrialBsTwoYearsBalances{}
	return &this
}

// NewTrialBsTwoYearsResponseTrialBsTwoYearsBalancesWithDefaults instantiates a new TrialBsTwoYearsResponseTrialBsTwoYearsBalances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrialBsTwoYearsResponseTrialBsTwoYearsBalancesWithDefaults() *TrialBsTwoYearsResponseTrialBsTwoYearsBalances {
	this := TrialBsTwoYearsResponseTrialBsTwoYearsBalances{}
	return &this
}

// GetAccountItemId returns the AccountItemId field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountItemId() int32 {
	if o == nil || o.AccountItemId == nil {
		var ret int32
		return ret
	}
	return *o.AccountItemId
}

// GetAccountItemIdOk returns a tuple with the AccountItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountItemIdOk() (*int32, bool) {
	if o == nil || o.AccountItemId == nil {
		return nil, false
	}
	return o.AccountItemId, true
}

// HasAccountItemId returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasAccountItemId() bool {
	if o != nil && o.AccountItemId != nil {
		return true
	}

	return false
}

// SetAccountItemId gets a reference to the given int32 and assigns it to the AccountItemId field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetAccountItemId(v int32) {
	o.AccountItemId = &v
}

// GetAccountItemName returns the AccountItemName field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountItemName() string {
	if o == nil || o.AccountItemName == nil {
		var ret string
		return ret
	}
	return *o.AccountItemName
}

// GetAccountItemNameOk returns a tuple with the AccountItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountItemNameOk() (*string, bool) {
	if o == nil || o.AccountItemName == nil {
		return nil, false
	}
	return o.AccountItemName, true
}

// HasAccountItemName returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasAccountItemName() bool {
	if o != nil && o.AccountItemName != nil {
		return true
	}

	return false
}

// SetAccountItemName gets a reference to the given string and assigns it to the AccountItemName field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetAccountItemName(v string) {
	o.AccountItemName = &v
}

// GetAccountGroupName returns the AccountGroupName field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountGroupName() string {
	if o == nil || o.AccountGroupName == nil {
		var ret string
		return ret
	}
	return *o.AccountGroupName
}

// GetAccountGroupNameOk returns a tuple with the AccountGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountGroupNameOk() (*string, bool) {
	if o == nil || o.AccountGroupName == nil {
		return nil, false
	}
	return o.AccountGroupName, true
}

// HasAccountGroupName returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasAccountGroupName() bool {
	if o != nil && o.AccountGroupName != nil {
		return true
	}

	return false
}

// SetAccountGroupName gets a reference to the given string and assigns it to the AccountGroupName field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetAccountGroupName(v string) {
	o.AccountGroupName = &v
}

// GetPartners returns the Partners field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetPartners() []TrialBsTwoYearsResponseTrialBsTwoYearsPartners {
	if o == nil || o.Partners == nil {
		var ret []TrialBsTwoYearsResponseTrialBsTwoYearsPartners
		return ret
	}
	return *o.Partners
}

// GetPartnersOk returns a tuple with the Partners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetPartnersOk() (*[]TrialBsTwoYearsResponseTrialBsTwoYearsPartners, bool) {
	if o == nil || o.Partners == nil {
		return nil, false
	}
	return o.Partners, true
}

// HasPartners returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasPartners() bool {
	if o != nil && o.Partners != nil {
		return true
	}

	return false
}

// SetPartners gets a reference to the given []TrialBsTwoYearsResponseTrialBsTwoYearsPartners and assigns it to the Partners field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetPartners(v []TrialBsTwoYearsResponseTrialBsTwoYearsPartners) {
	o.Partners = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetItems() []TrialBsTwoYearsResponseTrialBsTwoYearsItems {
	if o == nil || o.Items == nil {
		var ret []TrialBsTwoYearsResponseTrialBsTwoYearsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetItemsOk() (*[]TrialBsTwoYearsResponseTrialBsTwoYearsItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []TrialBsTwoYearsResponseTrialBsTwoYearsItems and assigns it to the Items field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetItems(v []TrialBsTwoYearsResponseTrialBsTwoYearsItems) {
	o.Items = &v
}

// GetAccountCategoryName returns the AccountCategoryName field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountCategoryName() string {
	if o == nil || o.AccountCategoryName == nil {
		var ret string
		return ret
	}
	return *o.AccountCategoryName
}

// GetAccountCategoryNameOk returns a tuple with the AccountCategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetAccountCategoryNameOk() (*string, bool) {
	if o == nil || o.AccountCategoryName == nil {
		return nil, false
	}
	return o.AccountCategoryName, true
}

// HasAccountCategoryName returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasAccountCategoryName() bool {
	if o != nil && o.AccountCategoryName != nil {
		return true
	}

	return false
}

// SetAccountCategoryName gets a reference to the given string and assigns it to the AccountCategoryName field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetAccountCategoryName(v string) {
	o.AccountCategoryName = &v
}

// GetTotalLine returns the TotalLine field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetTotalLine() bool {
	if o == nil || o.TotalLine == nil {
		var ret bool
		return ret
	}
	return *o.TotalLine
}

// GetTotalLineOk returns a tuple with the TotalLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetTotalLineOk() (*bool, bool) {
	if o == nil || o.TotalLine == nil {
		return nil, false
	}
	return o.TotalLine, true
}

// HasTotalLine returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasTotalLine() bool {
	if o != nil && o.TotalLine != nil {
		return true
	}

	return false
}

// SetTotalLine gets a reference to the given bool and assigns it to the TotalLine field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetTotalLine(v bool) {
	o.TotalLine = &v
}

// GetHierarchyLevel returns the HierarchyLevel field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetHierarchyLevel() int32 {
	if o == nil || o.HierarchyLevel == nil {
		var ret int32
		return ret
	}
	return *o.HierarchyLevel
}

// GetHierarchyLevelOk returns a tuple with the HierarchyLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetHierarchyLevelOk() (*int32, bool) {
	if o == nil || o.HierarchyLevel == nil {
		return nil, false
	}
	return o.HierarchyLevel, true
}

// HasHierarchyLevel returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasHierarchyLevel() bool {
	if o != nil && o.HierarchyLevel != nil {
		return true
	}

	return false
}

// SetHierarchyLevel gets a reference to the given int32 and assigns it to the HierarchyLevel field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetHierarchyLevel(v int32) {
	o.HierarchyLevel = &v
}

// GetParentAccountCategoryName returns the ParentAccountCategoryName field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetParentAccountCategoryName() string {
	if o == nil || o.ParentAccountCategoryName == nil {
		var ret string
		return ret
	}
	return *o.ParentAccountCategoryName
}

// GetParentAccountCategoryNameOk returns a tuple with the ParentAccountCategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetParentAccountCategoryNameOk() (*string, bool) {
	if o == nil || o.ParentAccountCategoryName == nil {
		return nil, false
	}
	return o.ParentAccountCategoryName, true
}

// HasParentAccountCategoryName returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasParentAccountCategoryName() bool {
	if o != nil && o.ParentAccountCategoryName != nil {
		return true
	}

	return false
}

// SetParentAccountCategoryName gets a reference to the given string and assigns it to the ParentAccountCategoryName field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetParentAccountCategoryName(v string) {
	o.ParentAccountCategoryName = &v
}

// GetLastYearClosingBalance returns the LastYearClosingBalance field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetLastYearClosingBalance() int32 {
	if o == nil || o.LastYearClosingBalance == nil {
		var ret int32
		return ret
	}
	return *o.LastYearClosingBalance
}

// GetLastYearClosingBalanceOk returns a tuple with the LastYearClosingBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetLastYearClosingBalanceOk() (*int32, bool) {
	if o == nil || o.LastYearClosingBalance == nil {
		return nil, false
	}
	return o.LastYearClosingBalance, true
}

// HasLastYearClosingBalance returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasLastYearClosingBalance() bool {
	if o != nil && o.LastYearClosingBalance != nil {
		return true
	}

	return false
}

// SetLastYearClosingBalance gets a reference to the given int32 and assigns it to the LastYearClosingBalance field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetLastYearClosingBalance(v int32) {
	o.LastYearClosingBalance = &v
}

// GetClosingBalance returns the ClosingBalance field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetClosingBalance() int32 {
	if o == nil || o.ClosingBalance == nil {
		var ret int32
		return ret
	}
	return *o.ClosingBalance
}

// GetClosingBalanceOk returns a tuple with the ClosingBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetClosingBalanceOk() (*int32, bool) {
	if o == nil || o.ClosingBalance == nil {
		return nil, false
	}
	return o.ClosingBalance, true
}

// HasClosingBalance returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasClosingBalance() bool {
	if o != nil && o.ClosingBalance != nil {
		return true
	}

	return false
}

// SetClosingBalance gets a reference to the given int32 and assigns it to the ClosingBalance field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetClosingBalance(v int32) {
	o.ClosingBalance = &v
}

// GetYearOnYear returns the YearOnYear field value if set, zero value otherwise.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetYearOnYear() float32 {
	if o == nil || o.YearOnYear == nil {
		var ret float32
		return ret
	}
	return *o.YearOnYear
}

// GetYearOnYearOk returns a tuple with the YearOnYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) GetYearOnYearOk() (*float32, bool) {
	if o == nil || o.YearOnYear == nil {
		return nil, false
	}
	return o.YearOnYear, true
}

// HasYearOnYear returns a boolean if a field has been set.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) HasYearOnYear() bool {
	if o != nil && o.YearOnYear != nil {
		return true
	}

	return false
}

// SetYearOnYear gets a reference to the given float32 and assigns it to the YearOnYear field.
func (o *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) SetYearOnYear(v float32) {
	o.YearOnYear = &v
}

func (o TrialBsTwoYearsResponseTrialBsTwoYearsBalances) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountItemId != nil {
		toSerialize["account_item_id"] = o.AccountItemId
	}
	if o.AccountItemName != nil {
		toSerialize["account_item_name"] = o.AccountItemName
	}
	if o.AccountGroupName != nil {
		toSerialize["account_group_name"] = o.AccountGroupName
	}
	if o.Partners != nil {
		toSerialize["partners"] = o.Partners
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.AccountCategoryName != nil {
		toSerialize["account_category_name"] = o.AccountCategoryName
	}
	if o.TotalLine != nil {
		toSerialize["total_line"] = o.TotalLine
	}
	if o.HierarchyLevel != nil {
		toSerialize["hierarchy_level"] = o.HierarchyLevel
	}
	if o.ParentAccountCategoryName != nil {
		toSerialize["parent_account_category_name"] = o.ParentAccountCategoryName
	}
	if o.LastYearClosingBalance != nil {
		toSerialize["last_year_closing_balance"] = o.LastYearClosingBalance
	}
	if o.ClosingBalance != nil {
		toSerialize["closing_balance"] = o.ClosingBalance
	}
	if o.YearOnYear != nil {
		toSerialize["year_on_year"] = o.YearOnYear
	}
	return json.Marshal(toSerialize)
}

type NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances struct {
	value *TrialBsTwoYearsResponseTrialBsTwoYearsBalances
	isSet bool
}

func (v NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances) Get() *TrialBsTwoYearsResponseTrialBsTwoYearsBalances {
	return v.value
}

func (v *NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances) Set(val *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) {
	v.value = val
	v.isSet = true
}

func (v NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances) IsSet() bool {
	return v.isSet
}

func (v *NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances(val *TrialBsTwoYearsResponseTrialBsTwoYearsBalances) *NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances {
	return &NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances{value: val, isSet: true}
}

func (v NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrialBsTwoYearsResponseTrialBsTwoYearsBalances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


