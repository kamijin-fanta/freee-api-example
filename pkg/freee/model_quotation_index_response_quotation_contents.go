/*
 * freee API
 *
 *  <h1 id=\"freee_api\">freee API</h1> <hr /> <h2 id=\"start_guide\">スタートガイド</h2>  <p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>  <hr /> <h2 id=\"specification\">仕様</h2>  <pre><code>【重要】会計freee APIの新バージョンについて 2020年12月まで、2つのバージョンが利用できる状態です。古いものは2020年12月に利用不可となります。<br> 新しいAPIを利用するにはリクエストヘッダーに以下を指定します。 X-Api-Version: 2020-06-15<br> 指定がない場合は2020年12月に廃止予定のAPIを利用することとなります。<br> 【重要】APIのバージョン指定をせずに利用し続ける場合 2020年12月に新しいバージョンのAPIに自動的に切り替わります。 詳細は、<a href=\"https://developer.freee.co.jp/release-note/2948\" target=\"_blank\">リリースノート</a>をご覧ください。<br> 旧バージョンのAPIリファレンスを確認したい場合は、<a href=\"https://freee.github.io/freee-api-schema/\" target=\"_blank\">旧バージョンのAPIリファレンスページ</a>をご覧ください。 </code></pre>  <h3 id=\"api_endpoint\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/ (httpsのみ)</p>  <h3 id=\"about_authorize\">認証について</h3> <p>OAuth2.0を利用します。詳細は<a href=\"https://developer.freee.co.jp/docs\" target=\"_blank\">ドキュメントの認証</a>パートを参照してください。</p>  <h3 id=\"data_format\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>  <h3 id=\"compatibility\">後方互換性ありの変更</h3>  <p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>  <ul> <li>新しいAPIリソース・エンドポイントの追加</li> <li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li> <li>既存のAPIレスポンスに対する新しいプロパティの追加</li> <li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li> <li>keyとなっているidやcodeの長さの変更（長くする）</li> </ul>  <h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Freee-Request-ID</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"common_error_response\">共通エラーレスポンス</h3>  <ul> <li> <p>ステータスコードはレスポンス内のJSONに含まれる他、HTTPヘッダにも含まれる</p> </li> <li> <p>一部のエラーレスポンスにはエラーコードが含まれます。<br>詳細は、<a href=\"https://developer.freee.co.jp/tips/faq/40x-checkpoint\">HTTPステータスコード400台エラー時のチェックポイント</a>を参照してください</p> </li> <p>type</p>  <ul> <li>status : HTTPステータスコードの説明</li>  <li>validation : エラーの詳細の説明（開発者向け）</li> </ul> </li> </ul>  <p>レスポンスの例</p>  <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;status&quot;,         &quot;messages&quot; : [&quot;不正なリクエストです。&quot;]       },       {         &quot;type&quot; : &quot;validation&quot;,         &quot;messages&quot; : [&quot;Date は不正な日付フォーマットです。入力例：2013-01-01&quot;]       }     ]   }</code></pre>  </br>  <h3 id=\"api_rate_limit\">API使用制限</h3>    <p>freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。</p>   <p>その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>  <h4 id=\"reports_api_endpoint\">/reportsと/receipts/{id}/downloadエンドポイント</h4>  <p>freeeはエンドポイント毎に一定頻度以上のアクセスを検知した場合、APIアクセスをコントロールする場合があります。その際のhttp status codeは429（too many requests）となります。</p>  <ul>   <li>/reports:1秒に10回まで</li>   <li>/receipts/{id}/download:1秒に3回まで</li> </ul>  <p>レスポンスボディのmetaプロパティに以下を含めます。</p>  <ul>   <li>設定されている上限値</li>   <li>上限に達するまでの使用可能回数</li>   <li>（上限値に達した場合）使用回数がリセットされる時刻</li> </ul>  <h3 id=\"plan_api_rate_limit\">プラン別のAPI Rate Limit</h3>   <table border=\"1\">     <tbody>       <tr>         <th style=\"padding: 10px\"><strong>会計freeeプラン名</strong></th>         <th style=\"padding: 10px\"><strong>事業所とアプリケーション毎に1日でのAPIコール数</strong></th>       </tr>       <tr>         <td style=\"padding: 10px\">エンタープライズ</td>         <td style=\"padding: 10px\">10,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">プロフェッショナル</td>         <td style=\"padding: 10px\">5,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ベーシック</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ミニマム</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">上記以外</td>         <td style=\"padding: 10px\">3,000</td>       </tr>     </tbody>   </table>  <h3 id=\"webhook\">Webhookについて</h3>  <p>詳細は<a href=\"https://developer.freee.co.jp/docs/accounting/webhook\" target=\"_blank\">会計Webhook概要</a>を参照してください。</p>  <hr /> <h2 id=\"contact\">連絡先</h2>  <p>ご不明点、ご要望等は <a href=\"https://support.freee.co.jp/hc/ja/requests/new\">freee サポートデスクへのお問い合わせフォーム</a> からご連絡ください。</p> <hr />&copy; Since 2013 freee K.K.
 *
 * API version: v1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package freee

import (
	"encoding/json"
)

// QuotationIndexResponseQuotationContents struct for QuotationIndexResponseQuotationContents
type QuotationIndexResponseQuotationContents struct {
	// 見積内容ID
	Id int32 `json:"id"`
	// 順序
	Order int32 `json:"order"`
	// 行の種類
	Type string `json:"type"`
	// 数量
	Qty float32 `json:"qty"`
	// 単位
	Unit NullableString `json:"unit"`
	// 単価
	UnitPrice float32 `json:"unit_price"`
	// 金額
	Amount int32 `json:"amount"`
	// 消費税額
	Vat int32 `json:"vat"`
	// 軽減税率税区分（true: 対象、false: 対象外）
	ReducedVat bool `json:"reduced_vat"`
	// 備考
	Description NullableString `json:"description"`
	// 勘定科目ID
	AccountItemId NullableInt32 `json:"account_item_id"`
	// 勘定科目名
	AccountItemName NullableString `json:"account_item_name"`
	// 税区分コード
	TaxCode NullableInt32 `json:"tax_code"`
	// 品目ID
	ItemId NullableInt32 `json:"item_id"`
	// 品目
	ItemName NullableString `json:"item_name"`
	// 部門ID
	SectionId NullableInt32 `json:"section_id"`
	// 部門
	SectionName NullableString `json:"section_name"`
	TagIds []int32 `json:"tag_ids"`
	TagNames []string `json:"tag_names"`
	// セグメント１ID
	Segment1TagId NullableInt32 `json:"segment_1_tag_id,omitempty"`
	// セグメント１ID
	Segment1TagName NullableString `json:"segment_1_tag_name,omitempty"`
	// セグメント２ID
	Segment2TagId NullableInt32 `json:"segment_2_tag_id,omitempty"`
	// セグメント２
	Segment2TagName NullableString `json:"segment_2_tag_name,omitempty"`
	// セグメント３ID
	Segment3TagId NullableInt32 `json:"segment_3_tag_id,omitempty"`
	// セグメント３
	Segment3TagName NullableString `json:"segment_3_tag_name,omitempty"`
}

// NewQuotationIndexResponseQuotationContents instantiates a new QuotationIndexResponseQuotationContents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotationIndexResponseQuotationContents(id int32, order int32, type_ string, qty float32, unit NullableString, unitPrice float32, amount int32, vat int32, reducedVat bool, description NullableString, accountItemId NullableInt32, accountItemName NullableString, taxCode NullableInt32, itemId NullableInt32, itemName NullableString, sectionId NullableInt32, sectionName NullableString, tagIds []int32, tagNames []string, ) *QuotationIndexResponseQuotationContents {
	this := QuotationIndexResponseQuotationContents{}
	this.Id = id
	this.Order = order
	this.Type = type_
	this.Qty = qty
	this.Unit = unit
	this.UnitPrice = unitPrice
	this.Amount = amount
	this.Vat = vat
	this.ReducedVat = reducedVat
	this.Description = description
	this.AccountItemId = accountItemId
	this.AccountItemName = accountItemName
	this.TaxCode = taxCode
	this.ItemId = itemId
	this.ItemName = itemName
	this.SectionId = sectionId
	this.SectionName = sectionName
	this.TagIds = tagIds
	this.TagNames = tagNames
	return &this
}

// NewQuotationIndexResponseQuotationContentsWithDefaults instantiates a new QuotationIndexResponseQuotationContents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotationIndexResponseQuotationContentsWithDefaults() *QuotationIndexResponseQuotationContents {
	this := QuotationIndexResponseQuotationContents{}
	return &this
}

// GetId returns the Id field value
func (o *QuotationIndexResponseQuotationContents) GetId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QuotationIndexResponseQuotationContents) SetId(v int32) {
	o.Id = v
}

// GetOrder returns the Order field value
func (o *QuotationIndexResponseQuotationContents) GetOrder() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetOrderOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *QuotationIndexResponseQuotationContents) SetOrder(v int32) {
	o.Order = v
}

// GetType returns the Type field value
func (o *QuotationIndexResponseQuotationContents) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *QuotationIndexResponseQuotationContents) SetType(v string) {
	o.Type = v
}

// GetQty returns the Qty field value
func (o *QuotationIndexResponseQuotationContents) GetQty() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetQtyOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *QuotationIndexResponseQuotationContents) SetQty(v float32) {
	o.Qty = v
}

// GetUnit returns the Unit field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QuotationIndexResponseQuotationContents) GetUnit() string {
	if o == nil || o.Unit.Get() == nil {
		var ret string
		return ret
	}

	return *o.Unit.Get()
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetUnitOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Unit.Get(), o.Unit.IsSet()
}

// SetUnit sets field value
func (o *QuotationIndexResponseQuotationContents) SetUnit(v string) {
	o.Unit.Set(&v)
}

// GetUnitPrice returns the UnitPrice field value
func (o *QuotationIndexResponseQuotationContents) GetUnitPrice() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetUnitPriceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnitPrice, true
}

// SetUnitPrice sets field value
func (o *QuotationIndexResponseQuotationContents) SetUnitPrice(v float32) {
	o.UnitPrice = v
}

// GetAmount returns the Amount field value
func (o *QuotationIndexResponseQuotationContents) GetAmount() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetAmountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QuotationIndexResponseQuotationContents) SetAmount(v int32) {
	o.Amount = v
}

// GetVat returns the Vat field value
func (o *QuotationIndexResponseQuotationContents) GetVat() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Vat
}

// GetVatOk returns a tuple with the Vat field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetVatOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Vat, true
}

// SetVat sets field value
func (o *QuotationIndexResponseQuotationContents) SetVat(v int32) {
	o.Vat = v
}

// GetReducedVat returns the ReducedVat field value
func (o *QuotationIndexResponseQuotationContents) GetReducedVat() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.ReducedVat
}

// GetReducedVatOk returns a tuple with the ReducedVat field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetReducedVatOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReducedVat, true
}

// SetReducedVat sets field value
func (o *QuotationIndexResponseQuotationContents) SetReducedVat(v bool) {
	o.ReducedVat = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QuotationIndexResponseQuotationContents) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *QuotationIndexResponseQuotationContents) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetAccountItemId returns the AccountItemId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *QuotationIndexResponseQuotationContents) GetAccountItemId() int32 {
	if o == nil || o.AccountItemId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.AccountItemId.Get()
}

// GetAccountItemIdOk returns a tuple with the AccountItemId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetAccountItemIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountItemId.Get(), o.AccountItemId.IsSet()
}

// SetAccountItemId sets field value
func (o *QuotationIndexResponseQuotationContents) SetAccountItemId(v int32) {
	o.AccountItemId.Set(&v)
}

// GetAccountItemName returns the AccountItemName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QuotationIndexResponseQuotationContents) GetAccountItemName() string {
	if o == nil || o.AccountItemName.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountItemName.Get()
}

// GetAccountItemNameOk returns a tuple with the AccountItemName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetAccountItemNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountItemName.Get(), o.AccountItemName.IsSet()
}

// SetAccountItemName sets field value
func (o *QuotationIndexResponseQuotationContents) SetAccountItemName(v string) {
	o.AccountItemName.Set(&v)
}

// GetTaxCode returns the TaxCode field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *QuotationIndexResponseQuotationContents) GetTaxCode() int32 {
	if o == nil || o.TaxCode.Get() == nil {
		var ret int32
		return ret
	}

	return *o.TaxCode.Get()
}

// GetTaxCodeOk returns a tuple with the TaxCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetTaxCodeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaxCode.Get(), o.TaxCode.IsSet()
}

// SetTaxCode sets field value
func (o *QuotationIndexResponseQuotationContents) SetTaxCode(v int32) {
	o.TaxCode.Set(&v)
}

// GetItemId returns the ItemId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *QuotationIndexResponseQuotationContents) GetItemId() int32 {
	if o == nil || o.ItemId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ItemId.Get()
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetItemIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemId.Get(), o.ItemId.IsSet()
}

// SetItemId sets field value
func (o *QuotationIndexResponseQuotationContents) SetItemId(v int32) {
	o.ItemId.Set(&v)
}

// GetItemName returns the ItemName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QuotationIndexResponseQuotationContents) GetItemName() string {
	if o == nil || o.ItemName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemName.Get()
}

// GetItemNameOk returns a tuple with the ItemName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetItemNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemName.Get(), o.ItemName.IsSet()
}

// SetItemName sets field value
func (o *QuotationIndexResponseQuotationContents) SetItemName(v string) {
	o.ItemName.Set(&v)
}

// GetSectionId returns the SectionId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *QuotationIndexResponseQuotationContents) GetSectionId() int32 {
	if o == nil || o.SectionId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.SectionId.Get()
}

// GetSectionIdOk returns a tuple with the SectionId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSectionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SectionId.Get(), o.SectionId.IsSet()
}

// SetSectionId sets field value
func (o *QuotationIndexResponseQuotationContents) SetSectionId(v int32) {
	o.SectionId.Set(&v)
}

// GetSectionName returns the SectionName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QuotationIndexResponseQuotationContents) GetSectionName() string {
	if o == nil || o.SectionName.Get() == nil {
		var ret string
		return ret
	}

	return *o.SectionName.Get()
}

// GetSectionNameOk returns a tuple with the SectionName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSectionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SectionName.Get(), o.SectionName.IsSet()
}

// SetSectionName sets field value
func (o *QuotationIndexResponseQuotationContents) SetSectionName(v string) {
	o.SectionName.Set(&v)
}

// GetTagIds returns the TagIds field value
func (o *QuotationIndexResponseQuotationContents) GetTagIds() []int32 {
	if o == nil  {
		var ret []int32
		return ret
	}

	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetTagIdsOk() (*[]int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TagIds, true
}

// SetTagIds sets field value
func (o *QuotationIndexResponseQuotationContents) SetTagIds(v []int32) {
	o.TagIds = v
}

// GetTagNames returns the TagNames field value
func (o *QuotationIndexResponseQuotationContents) GetTagNames() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value
// and a boolean to check if the value has been set.
func (o *QuotationIndexResponseQuotationContents) GetTagNamesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TagNames, true
}

// SetTagNames sets field value
func (o *QuotationIndexResponseQuotationContents) SetTagNames(v []string) {
	o.TagNames = v
}

// GetSegment1TagId returns the Segment1TagId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationIndexResponseQuotationContents) GetSegment1TagId() int32 {
	if o == nil || o.Segment1TagId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Segment1TagId.Get()
}

// GetSegment1TagIdOk returns a tuple with the Segment1TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSegment1TagIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Segment1TagId.Get(), o.Segment1TagId.IsSet()
}

// HasSegment1TagId returns a boolean if a field has been set.
func (o *QuotationIndexResponseQuotationContents) HasSegment1TagId() bool {
	if o != nil && o.Segment1TagId.IsSet() {
		return true
	}

	return false
}

// SetSegment1TagId gets a reference to the given NullableInt32 and assigns it to the Segment1TagId field.
func (o *QuotationIndexResponseQuotationContents) SetSegment1TagId(v int32) {
	o.Segment1TagId.Set(&v)
}
// SetSegment1TagIdNil sets the value for Segment1TagId to be an explicit nil
func (o *QuotationIndexResponseQuotationContents) SetSegment1TagIdNil() {
	o.Segment1TagId.Set(nil)
}

// UnsetSegment1TagId ensures that no value is present for Segment1TagId, not even an explicit nil
func (o *QuotationIndexResponseQuotationContents) UnsetSegment1TagId() {
	o.Segment1TagId.Unset()
}

// GetSegment1TagName returns the Segment1TagName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationIndexResponseQuotationContents) GetSegment1TagName() string {
	if o == nil || o.Segment1TagName.Get() == nil {
		var ret string
		return ret
	}
	return *o.Segment1TagName.Get()
}

// GetSegment1TagNameOk returns a tuple with the Segment1TagName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSegment1TagNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Segment1TagName.Get(), o.Segment1TagName.IsSet()
}

// HasSegment1TagName returns a boolean if a field has been set.
func (o *QuotationIndexResponseQuotationContents) HasSegment1TagName() bool {
	if o != nil && o.Segment1TagName.IsSet() {
		return true
	}

	return false
}

// SetSegment1TagName gets a reference to the given NullableString and assigns it to the Segment1TagName field.
func (o *QuotationIndexResponseQuotationContents) SetSegment1TagName(v string) {
	o.Segment1TagName.Set(&v)
}
// SetSegment1TagNameNil sets the value for Segment1TagName to be an explicit nil
func (o *QuotationIndexResponseQuotationContents) SetSegment1TagNameNil() {
	o.Segment1TagName.Set(nil)
}

// UnsetSegment1TagName ensures that no value is present for Segment1TagName, not even an explicit nil
func (o *QuotationIndexResponseQuotationContents) UnsetSegment1TagName() {
	o.Segment1TagName.Unset()
}

// GetSegment2TagId returns the Segment2TagId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationIndexResponseQuotationContents) GetSegment2TagId() int32 {
	if o == nil || o.Segment2TagId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Segment2TagId.Get()
}

// GetSegment2TagIdOk returns a tuple with the Segment2TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSegment2TagIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Segment2TagId.Get(), o.Segment2TagId.IsSet()
}

// HasSegment2TagId returns a boolean if a field has been set.
func (o *QuotationIndexResponseQuotationContents) HasSegment2TagId() bool {
	if o != nil && o.Segment2TagId.IsSet() {
		return true
	}

	return false
}

// SetSegment2TagId gets a reference to the given NullableInt32 and assigns it to the Segment2TagId field.
func (o *QuotationIndexResponseQuotationContents) SetSegment2TagId(v int32) {
	o.Segment2TagId.Set(&v)
}
// SetSegment2TagIdNil sets the value for Segment2TagId to be an explicit nil
func (o *QuotationIndexResponseQuotationContents) SetSegment2TagIdNil() {
	o.Segment2TagId.Set(nil)
}

// UnsetSegment2TagId ensures that no value is present for Segment2TagId, not even an explicit nil
func (o *QuotationIndexResponseQuotationContents) UnsetSegment2TagId() {
	o.Segment2TagId.Unset()
}

// GetSegment2TagName returns the Segment2TagName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationIndexResponseQuotationContents) GetSegment2TagName() string {
	if o == nil || o.Segment2TagName.Get() == nil {
		var ret string
		return ret
	}
	return *o.Segment2TagName.Get()
}

// GetSegment2TagNameOk returns a tuple with the Segment2TagName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSegment2TagNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Segment2TagName.Get(), o.Segment2TagName.IsSet()
}

// HasSegment2TagName returns a boolean if a field has been set.
func (o *QuotationIndexResponseQuotationContents) HasSegment2TagName() bool {
	if o != nil && o.Segment2TagName.IsSet() {
		return true
	}

	return false
}

// SetSegment2TagName gets a reference to the given NullableString and assigns it to the Segment2TagName field.
func (o *QuotationIndexResponseQuotationContents) SetSegment2TagName(v string) {
	o.Segment2TagName.Set(&v)
}
// SetSegment2TagNameNil sets the value for Segment2TagName to be an explicit nil
func (o *QuotationIndexResponseQuotationContents) SetSegment2TagNameNil() {
	o.Segment2TagName.Set(nil)
}

// UnsetSegment2TagName ensures that no value is present for Segment2TagName, not even an explicit nil
func (o *QuotationIndexResponseQuotationContents) UnsetSegment2TagName() {
	o.Segment2TagName.Unset()
}

// GetSegment3TagId returns the Segment3TagId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationIndexResponseQuotationContents) GetSegment3TagId() int32 {
	if o == nil || o.Segment3TagId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Segment3TagId.Get()
}

// GetSegment3TagIdOk returns a tuple with the Segment3TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSegment3TagIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Segment3TagId.Get(), o.Segment3TagId.IsSet()
}

// HasSegment3TagId returns a boolean if a field has been set.
func (o *QuotationIndexResponseQuotationContents) HasSegment3TagId() bool {
	if o != nil && o.Segment3TagId.IsSet() {
		return true
	}

	return false
}

// SetSegment3TagId gets a reference to the given NullableInt32 and assigns it to the Segment3TagId field.
func (o *QuotationIndexResponseQuotationContents) SetSegment3TagId(v int32) {
	o.Segment3TagId.Set(&v)
}
// SetSegment3TagIdNil sets the value for Segment3TagId to be an explicit nil
func (o *QuotationIndexResponseQuotationContents) SetSegment3TagIdNil() {
	o.Segment3TagId.Set(nil)
}

// UnsetSegment3TagId ensures that no value is present for Segment3TagId, not even an explicit nil
func (o *QuotationIndexResponseQuotationContents) UnsetSegment3TagId() {
	o.Segment3TagId.Unset()
}

// GetSegment3TagName returns the Segment3TagName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuotationIndexResponseQuotationContents) GetSegment3TagName() string {
	if o == nil || o.Segment3TagName.Get() == nil {
		var ret string
		return ret
	}
	return *o.Segment3TagName.Get()
}

// GetSegment3TagNameOk returns a tuple with the Segment3TagName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotationIndexResponseQuotationContents) GetSegment3TagNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Segment3TagName.Get(), o.Segment3TagName.IsSet()
}

// HasSegment3TagName returns a boolean if a field has been set.
func (o *QuotationIndexResponseQuotationContents) HasSegment3TagName() bool {
	if o != nil && o.Segment3TagName.IsSet() {
		return true
	}

	return false
}

// SetSegment3TagName gets a reference to the given NullableString and assigns it to the Segment3TagName field.
func (o *QuotationIndexResponseQuotationContents) SetSegment3TagName(v string) {
	o.Segment3TagName.Set(&v)
}
// SetSegment3TagNameNil sets the value for Segment3TagName to be an explicit nil
func (o *QuotationIndexResponseQuotationContents) SetSegment3TagNameNil() {
	o.Segment3TagName.Set(nil)
}

// UnsetSegment3TagName ensures that no value is present for Segment3TagName, not even an explicit nil
func (o *QuotationIndexResponseQuotationContents) UnsetSegment3TagName() {
	o.Segment3TagName.Unset()
}

func (o QuotationIndexResponseQuotationContents) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["order"] = o.Order
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["qty"] = o.Qty
	}
	if true {
		toSerialize["unit"] = o.Unit.Get()
	}
	if true {
		toSerialize["unit_price"] = o.UnitPrice
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["vat"] = o.Vat
	}
	if true {
		toSerialize["reduced_vat"] = o.ReducedVat
	}
	if true {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["account_item_id"] = o.AccountItemId.Get()
	}
	if true {
		toSerialize["account_item_name"] = o.AccountItemName.Get()
	}
	if true {
		toSerialize["tax_code"] = o.TaxCode.Get()
	}
	if true {
		toSerialize["item_id"] = o.ItemId.Get()
	}
	if true {
		toSerialize["item_name"] = o.ItemName.Get()
	}
	if true {
		toSerialize["section_id"] = o.SectionId.Get()
	}
	if true {
		toSerialize["section_name"] = o.SectionName.Get()
	}
	if true {
		toSerialize["tag_ids"] = o.TagIds
	}
	if true {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.Segment1TagId.IsSet() {
		toSerialize["segment_1_tag_id"] = o.Segment1TagId.Get()
	}
	if o.Segment1TagName.IsSet() {
		toSerialize["segment_1_tag_name"] = o.Segment1TagName.Get()
	}
	if o.Segment2TagId.IsSet() {
		toSerialize["segment_2_tag_id"] = o.Segment2TagId.Get()
	}
	if o.Segment2TagName.IsSet() {
		toSerialize["segment_2_tag_name"] = o.Segment2TagName.Get()
	}
	if o.Segment3TagId.IsSet() {
		toSerialize["segment_3_tag_id"] = o.Segment3TagId.Get()
	}
	if o.Segment3TagName.IsSet() {
		toSerialize["segment_3_tag_name"] = o.Segment3TagName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableQuotationIndexResponseQuotationContents struct {
	value *QuotationIndexResponseQuotationContents
	isSet bool
}

func (v NullableQuotationIndexResponseQuotationContents) Get() *QuotationIndexResponseQuotationContents {
	return v.value
}

func (v *NullableQuotationIndexResponseQuotationContents) Set(val *QuotationIndexResponseQuotationContents) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotationIndexResponseQuotationContents) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotationIndexResponseQuotationContents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotationIndexResponseQuotationContents(val *QuotationIndexResponseQuotationContents) *NullableQuotationIndexResponseQuotationContents {
	return &NullableQuotationIndexResponseQuotationContents{value: val, isSet: true}
}

func (v NullableQuotationIndexResponseQuotationContents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotationIndexResponseQuotationContents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


