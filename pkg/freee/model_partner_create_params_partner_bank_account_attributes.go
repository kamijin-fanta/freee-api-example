/*
 * freee API
 *
 *  <h1 id=\"freee_api\">freee API</h1> <hr /> <h2 id=\"start_guide\">スタートガイド</h2>  <p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>  <hr /> <h2 id=\"specification\">仕様</h2>  <pre><code>【重要】会計freee APIの新バージョンについて 2020年12月まで、2つのバージョンが利用できる状態です。古いものは2020年12月に利用不可となります。<br> 新しいAPIを利用するにはリクエストヘッダーに以下を指定します。 X-Api-Version: 2020-06-15<br> 指定がない場合は2020年12月に廃止予定のAPIを利用することとなります。<br> 【重要】APIのバージョン指定をせずに利用し続ける場合 2020年12月に新しいバージョンのAPIに自動的に切り替わります。 詳細は、<a href=\"https://developer.freee.co.jp/release-note/2948\" target=\"_blank\">リリースノート</a>をご覧ください。<br> 旧バージョンのAPIリファレンスを確認したい場合は、<a href=\"https://freee.github.io/freee-api-schema/\" target=\"_blank\">旧バージョンのAPIリファレンスページ</a>をご覧ください。 </code></pre>  <h3 id=\"api_endpoint\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/ (httpsのみ)</p>  <h3 id=\"about_authorize\">認証について</h3> <p>OAuth2.0を利用します。詳細は<a href=\"https://developer.freee.co.jp/docs\" target=\"_blank\">ドキュメントの認証</a>パートを参照してください。</p>  <h3 id=\"data_format\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>  <h3 id=\"compatibility\">後方互換性ありの変更</h3>  <p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>  <ul> <li>新しいAPIリソース・エンドポイントの追加</li> <li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li> <li>既存のAPIレスポンスに対する新しいプロパティの追加</li> <li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li> <li>keyとなっているidやcodeの長さの変更（長くする）</li> </ul>  <h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Freee-Request-ID</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"common_error_response\">共通エラーレスポンス</h3>  <ul> <li> <p>ステータスコードはレスポンス内のJSONに含まれる他、HTTPヘッダにも含まれる</p> </li> <li> <p>一部のエラーレスポンスにはエラーコードが含まれます。<br>詳細は、<a href=\"https://developer.freee.co.jp/tips/faq/40x-checkpoint\">HTTPステータスコード400台エラー時のチェックポイント</a>を参照してください</p> </li> <p>type</p>  <ul> <li>status : HTTPステータスコードの説明</li>  <li>validation : エラーの詳細の説明（開発者向け）</li> </ul> </li> </ul>  <p>レスポンスの例</p>  <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;status&quot;,         &quot;messages&quot; : [&quot;不正なリクエストです。&quot;]       },       {         &quot;type&quot; : &quot;validation&quot;,         &quot;messages&quot; : [&quot;Date は不正な日付フォーマットです。入力例：2013-01-01&quot;]       }     ]   }</code></pre>  </br>  <h3 id=\"api_rate_limit\">API使用制限</h3>    <p>freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。</p>   <p>その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>  <h4 id=\"reports_api_endpoint\">/reportsと/receipts/{id}/downloadエンドポイント</h4>  <p>freeeはエンドポイント毎に一定頻度以上のアクセスを検知した場合、APIアクセスをコントロールする場合があります。その際のhttp status codeは429（too many requests）となります。</p>  <ul>   <li>/reports:1秒に10回まで</li>   <li>/receipts/{id}/download:1秒に3回まで</li> </ul>  <p>レスポンスボディのmetaプロパティに以下を含めます。</p>  <ul>   <li>設定されている上限値</li>   <li>上限に達するまでの使用可能回数</li>   <li>（上限値に達した場合）使用回数がリセットされる時刻</li> </ul>  <h3 id=\"plan_api_rate_limit\">プラン別のAPI Rate Limit</h3>   <table border=\"1\">     <tbody>       <tr>         <th style=\"padding: 10px\"><strong>会計freeeプラン名</strong></th>         <th style=\"padding: 10px\"><strong>事業所とアプリケーション毎に1日でのAPIコール数</strong></th>       </tr>       <tr>         <td style=\"padding: 10px\">エンタープライズ</td>         <td style=\"padding: 10px\">10,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">プロフェッショナル</td>         <td style=\"padding: 10px\">5,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ベーシック</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ミニマム</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">上記以外</td>         <td style=\"padding: 10px\">3,000</td>       </tr>     </tbody>   </table>  <h3 id=\"webhook\">Webhookについて</h3>  <p>詳細は<a href=\"https://developer.freee.co.jp/docs/accounting/webhook\" target=\"_blank\">会計Webhook概要</a>を参照してください。</p>  <hr /> <h2 id=\"contact\">連絡先</h2>  <p>ご不明点、ご要望等は <a href=\"https://support.freee.co.jp/hc/ja/requests/new\">freee サポートデスクへのお問い合わせフォーム</a> からご連絡ください。</p> <hr />&copy; Since 2013 freee K.K.
 *
 * API version: v1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package freee

import (
	"encoding/json"
)

// PartnerCreateParamsPartnerBankAccountAttributes struct for PartnerCreateParamsPartnerBankAccountAttributes
type PartnerCreateParamsPartnerBankAccountAttributes struct {
	// 銀行名
	BankName *string `json:"bank_name,omitempty"`
	// 銀行名（カナ）
	BankNameKana *string `json:"bank_name_kana,omitempty"`
	// 銀行コード
	BankCode *string `json:"bank_code,omitempty"`
	// 支店名
	BranchName *string `json:"branch_name,omitempty"`
	// 支店名（カナ）
	BranchKana *string `json:"branch_kana,omitempty"`
	// 支店番号
	BranchCode *string `json:"branch_code,omitempty"`
	// 口座種別(ordinary:普通、checking：当座、earmarked：納税準備預金、savings：貯蓄、other:その他)
	AccountType *string `json:"account_type,omitempty"`
	// 口座番号
	AccountNumber *string `json:"account_number,omitempty"`
	// 受取人名
	LongAccountName *string `json:"long_account_name,omitempty"`
	// 受取人名（カナ）
	AccountName *string `json:"account_name,omitempty"`
}

// NewPartnerCreateParamsPartnerBankAccountAttributes instantiates a new PartnerCreateParamsPartnerBankAccountAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerCreateParamsPartnerBankAccountAttributes() *PartnerCreateParamsPartnerBankAccountAttributes {
	this := PartnerCreateParamsPartnerBankAccountAttributes{}
	return &this
}

// NewPartnerCreateParamsPartnerBankAccountAttributesWithDefaults instantiates a new PartnerCreateParamsPartnerBankAccountAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerCreateParamsPartnerBankAccountAttributesWithDefaults() *PartnerCreateParamsPartnerBankAccountAttributes {
	this := PartnerCreateParamsPartnerBankAccountAttributes{}
	return &this
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBankName() string {
	if o == nil || o.BankName == nil {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBankNameOk() (*string, bool) {
	if o == nil || o.BankName == nil {
		return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasBankName() bool {
	if o != nil && o.BankName != nil {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetBankName(v string) {
	o.BankName = &v
}

// GetBankNameKana returns the BankNameKana field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBankNameKana() string {
	if o == nil || o.BankNameKana == nil {
		var ret string
		return ret
	}
	return *o.BankNameKana
}

// GetBankNameKanaOk returns a tuple with the BankNameKana field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBankNameKanaOk() (*string, bool) {
	if o == nil || o.BankNameKana == nil {
		return nil, false
	}
	return o.BankNameKana, true
}

// HasBankNameKana returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasBankNameKana() bool {
	if o != nil && o.BankNameKana != nil {
		return true
	}

	return false
}

// SetBankNameKana gets a reference to the given string and assigns it to the BankNameKana field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetBankNameKana(v string) {
	o.BankNameKana = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBankCode() string {
	if o == nil || o.BankCode == nil {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBankCodeOk() (*string, bool) {
	if o == nil || o.BankCode == nil {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasBankCode() bool {
	if o != nil && o.BankCode != nil {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBranchName returns the BranchName field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBranchName() string {
	if o == nil || o.BranchName == nil {
		var ret string
		return ret
	}
	return *o.BranchName
}

// GetBranchNameOk returns a tuple with the BranchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBranchNameOk() (*string, bool) {
	if o == nil || o.BranchName == nil {
		return nil, false
	}
	return o.BranchName, true
}

// HasBranchName returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasBranchName() bool {
	if o != nil && o.BranchName != nil {
		return true
	}

	return false
}

// SetBranchName gets a reference to the given string and assigns it to the BranchName field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetBranchName(v string) {
	o.BranchName = &v
}

// GetBranchKana returns the BranchKana field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBranchKana() string {
	if o == nil || o.BranchKana == nil {
		var ret string
		return ret
	}
	return *o.BranchKana
}

// GetBranchKanaOk returns a tuple with the BranchKana field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBranchKanaOk() (*string, bool) {
	if o == nil || o.BranchKana == nil {
		return nil, false
	}
	return o.BranchKana, true
}

// HasBranchKana returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasBranchKana() bool {
	if o != nil && o.BranchKana != nil {
		return true
	}

	return false
}

// SetBranchKana gets a reference to the given string and assigns it to the BranchKana field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetBranchKana(v string) {
	o.BranchKana = &v
}

// GetBranchCode returns the BranchCode field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBranchCode() string {
	if o == nil || o.BranchCode == nil {
		var ret string
		return ret
	}
	return *o.BranchCode
}

// GetBranchCodeOk returns a tuple with the BranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetBranchCodeOk() (*string, bool) {
	if o == nil || o.BranchCode == nil {
		return nil, false
	}
	return o.BranchCode, true
}

// HasBranchCode returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasBranchCode() bool {
	if o != nil && o.BranchCode != nil {
		return true
	}

	return false
}

// SetBranchCode gets a reference to the given string and assigns it to the BranchCode field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetBranchCode(v string) {
	o.BranchCode = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetAccountType() string {
	if o == nil || o.AccountType == nil {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetAccountTypeOk() (*string, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetAccountNumber() string {
	if o == nil || o.AccountNumber == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetAccountNumberOk() (*string, bool) {
	if o == nil || o.AccountNumber == nil {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasAccountNumber() bool {
	if o != nil && o.AccountNumber != nil {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetLongAccountName returns the LongAccountName field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetLongAccountName() string {
	if o == nil || o.LongAccountName == nil {
		var ret string
		return ret
	}
	return *o.LongAccountName
}

// GetLongAccountNameOk returns a tuple with the LongAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetLongAccountNameOk() (*string, bool) {
	if o == nil || o.LongAccountName == nil {
		return nil, false
	}
	return o.LongAccountName, true
}

// HasLongAccountName returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasLongAccountName() bool {
	if o != nil && o.LongAccountName != nil {
		return true
	}

	return false
}

// SetLongAccountName gets a reference to the given string and assigns it to the LongAccountName field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetLongAccountName(v string) {
	o.LongAccountName = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *PartnerCreateParamsPartnerBankAccountAttributes) SetAccountName(v string) {
	o.AccountName = &v
}

func (o PartnerCreateParamsPartnerBankAccountAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BankName != nil {
		toSerialize["bank_name"] = o.BankName
	}
	if o.BankNameKana != nil {
		toSerialize["bank_name_kana"] = o.BankNameKana
	}
	if o.BankCode != nil {
		toSerialize["bank_code"] = o.BankCode
	}
	if o.BranchName != nil {
		toSerialize["branch_name"] = o.BranchName
	}
	if o.BranchKana != nil {
		toSerialize["branch_kana"] = o.BranchKana
	}
	if o.BranchCode != nil {
		toSerialize["branch_code"] = o.BranchCode
	}
	if o.AccountType != nil {
		toSerialize["account_type"] = o.AccountType
	}
	if o.AccountNumber != nil {
		toSerialize["account_number"] = o.AccountNumber
	}
	if o.LongAccountName != nil {
		toSerialize["long_account_name"] = o.LongAccountName
	}
	if o.AccountName != nil {
		toSerialize["account_name"] = o.AccountName
	}
	return json.Marshal(toSerialize)
}

type NullablePartnerCreateParamsPartnerBankAccountAttributes struct {
	value *PartnerCreateParamsPartnerBankAccountAttributes
	isSet bool
}

func (v NullablePartnerCreateParamsPartnerBankAccountAttributes) Get() *PartnerCreateParamsPartnerBankAccountAttributes {
	return v.value
}

func (v *NullablePartnerCreateParamsPartnerBankAccountAttributes) Set(val *PartnerCreateParamsPartnerBankAccountAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerCreateParamsPartnerBankAccountAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerCreateParamsPartnerBankAccountAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerCreateParamsPartnerBankAccountAttributes(val *PartnerCreateParamsPartnerBankAccountAttributes) *NullablePartnerCreateParamsPartnerBankAccountAttributes {
	return &NullablePartnerCreateParamsPartnerBankAccountAttributes{value: val, isSet: true}
}

func (v NullablePartnerCreateParamsPartnerBankAccountAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerCreateParamsPartnerBankAccountAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


